
state 0
	$accept: .spec $end 

	DATA  shift 8
	CONST  shift 10
	MODULE  shift 9
	PROC  shift 11
	INIT  shift 12
	.  error

	spec  goto 1
	toplevel_body  goto 2
	data_def  goto 3
	module_def  goto 4
	const_def  goto 5
	proc_def  goto 6
	init_block  goto 7

state 1
	$accept:  spec.$end 

	$end  accept
	.  error


state 2
	spec:  toplevel_body.    (1)
	spec:  toplevel_body.spec 

	DATA  shift 8
	CONST  shift 10
	MODULE  shift 9
	PROC  shift 11
	INIT  shift 12
	.  reduce 1 (src line 137)

	spec  goto 13
	toplevel_body  goto 2
	data_def  goto 3
	module_def  goto 4
	const_def  goto 5
	proc_def  goto 6
	init_block  goto 7

state 3
	toplevel_body:  data_def.    (3)

	.  reduce 3 (src line 152)


state 4
	toplevel_body:  module_def.    (4)

	.  reduce 4 (src line 154)


state 5
	toplevel_body:  const_def.    (5)

	.  reduce 5 (src line 155)


state 6
	toplevel_body:  proc_def.    (6)

	.  reduce 6 (src line 156)


state 7
	toplevel_body:  init_block.    (7)

	.  reduce 7 (src line 157)


state 8
	data_def:  DATA.IDENTIFIER { idents_one } ; 

	IDENTIFIER  shift 14
	.  error


state 9
	module_def:  MODULE.IDENTIFIER ( parameters_zero ) { module_body_zero } ; 

	IDENTIFIER  shift 15
	.  error


state 10
	const_def:  CONST.IDENTIFIER type ASSIGN expr ; 

	IDENTIFIER  shift 16
	.  error


state 11
	proc_def:  PROC.IDENTIFIER ( parameters_zero ) { statements_zero } ; 

	IDENTIFIER  shift 17
	.  error


state 12
	init_block:  INIT.{ initvars_zero } ; 

	{  shift 18
	.  error


state 13
	spec:  toplevel_body spec.    (2)

	.  reduce 2 (src line 144)


state 14
	data_def:  DATA IDENTIFIER.{ idents_one } ; 

	{  shift 19
	.  error


state 15
	module_def:  MODULE IDENTIFIER.( parameters_zero ) { module_body_zero } ; 

	(  shift 20
	.  error


state 16
	const_def:  CONST IDENTIFIER.type ASSIGN expr ; 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	[  shift 23
	.  error

	type  goto 21

state 17
	proc_def:  PROC IDENTIFIER.( parameters_zero ) { statements_zero } ; 

	(  shift 25
	.  error


state 18
	init_block:  INIT {.initvars_zero } ; 
	initvars_zero: .    (18)

	IDENTIFIER  shift 29
	.  reduce 18 (src line 204)

	initvars_zero  goto 26
	initvars_one  goto 27
	initvar  goto 28

state 19
	data_def:  DATA IDENTIFIER {.idents_one } ; 

	IDENTIFIER  shift 31
	.  error

	idents_one  goto 30

state 20
	module_def:  MODULE IDENTIFIER (.parameters_zero ) { module_body_zero } ; 
	parameters_zero: .    (90)

	IDENTIFIER  shift 35
	.  reduce 90 (src line 506)

	parameters_zero  goto 32
	parameters_one  goto 33
	parameter  goto 34

state 21
	const_def:  CONST IDENTIFIER type.ASSIGN expr ; 

	ASSIGN  shift 36
	.  error


state 22
	type:  IDENTIFIER.    (102)

	.  reduce 102 (src line 564)


state 23
	type:  [.] type 

	]  shift 37
	.  error


state 24
	type:  CHANNEL.{ types_one } 
	type:  CHANNEL.[ ] { types_one } 
	type:  CHANNEL.[ expr ] { types_one } 

	{  shift 38
	[  shift 39
	.  error


state 25
	proc_def:  PROC IDENTIFIER (.parameters_zero ) { statements_zero } ; 
	parameters_zero: .    (90)

	IDENTIFIER  shift 35
	.  reduce 90 (src line 506)

	parameters_zero  goto 40
	parameters_one  goto 33
	parameter  goto 34

state 26
	init_block:  INIT { initvars_zero.} ; 

	}  shift 41
	.  error


state 27
	initvars_zero:  initvars_one.    (19)

	.  reduce 19 (src line 209)


state 28
	initvars_one:  initvar.    (20)
	initvars_one:  initvar., 
	initvars_one:  initvar., initvars_one 

	,  shift 42
	.  reduce 20 (src line 214)


state 29
	initvar:  IDENTIFIER.: type tags_zero 
	initvar:  IDENTIFIER.: IDENTIFIER ( arguments_one ) tags_zero 

	:  shift 43
	.  error


state 30
	data_def:  DATA IDENTIFIER { idents_one.} ; 

	}  shift 44
	.  error


state 31
	idents_one:  IDENTIFIER.    (87)
	idents_one:  IDENTIFIER., 
	idents_one:  IDENTIFIER., idents_one 

	,  shift 45
	.  reduce 87 (src line 492)


state 32
	module_def:  MODULE IDENTIFIER ( parameters_zero.) { module_body_zero } ; 

	)  shift 46
	.  error


state 33
	parameters_zero:  parameters_one.    (91)

	.  reduce 91 (src line 511)


state 34
	parameters_one:  parameter.    (92)
	parameters_one:  parameter., 
	parameters_one:  parameter., parameters_one 

	,  shift 47
	.  reduce 92 (src line 516)


state 35
	parameter:  IDENTIFIER.type 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	[  shift 23
	.  error

	type  goto 48

state 36
	const_def:  CONST IDENTIFIER type ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 49

state 37
	type:  [ ].type 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	[  shift 23
	.  error

	type  goto 62

state 38
	type:  CHANNEL {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	[  shift 23
	.  error

	types_one  goto 63
	type  goto 64

state 39
	type:  CHANNEL [.] { types_one } 
	type:  CHANNEL [.expr ] { types_one } 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	]  shift 65
	.  error

	expr  goto 66

state 40
	proc_def:  PROC IDENTIFIER ( parameters_zero.) { statements_zero } ; 

	)  shift 67
	.  error


state 41
	init_block:  INIT { initvars_zero }.; 

	;  shift 68
	.  error


state 42
	initvars_one:  initvar ,.    (21)
	initvars_one:  initvar ,.initvars_one 

	IDENTIFIER  shift 29
	.  reduce 21 (src line 219)

	initvars_one  goto 69
	initvar  goto 28

state 43
	initvar:  IDENTIFIER :.type tags_zero 
	initvar:  IDENTIFIER :.IDENTIFIER ( arguments_one ) tags_zero 

	IDENTIFIER  shift 71
	CHANNEL  shift 24
	[  shift 23
	.  error

	type  goto 70

state 44
	data_def:  DATA IDENTIFIER { idents_one }.; 

	;  shift 72
	.  error


state 45
	idents_one:  IDENTIFIER ,.    (88)
	idents_one:  IDENTIFIER ,.idents_one 

	IDENTIFIER  shift 31
	.  reduce 88 (src line 497)

	idents_one  goto 73

state 46
	module_def:  MODULE IDENTIFIER ( parameters_zero ).{ module_body_zero } ; 

	{  shift 74
	.  error


state 47
	parameters_one:  parameter ,.    (93)
	parameters_one:  parameter ,.parameters_one 

	IDENTIFIER  shift 35
	.  reduce 93 (src line 521)

	parameters_one  goto 75
	parameter  goto 34

state 48
	parameter:  IDENTIFIER type.    (95)

	.  reduce 95 (src line 530)


state 49
	const_def:  CONST IDENTIFIER type ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 76
	.  error


state 50
	expr:  IDENTIFIER.    (57)

	.  reduce 57 (src line 369)


state 51
	expr:  NUMBER.    (58)

	.  reduce 58 (src line 373)


state 52
	expr:  TRUE.    (59)

	.  reduce 59 (src line 377)


state 53
	expr:  FALSE.    (60)

	.  reduce 60 (src line 381)


state 54
	expr:  NOT.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 95

state 55
	expr:  SUB.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 96

state 56
	expr:  (.expr ) 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 97

state 57
	expr:  TIMEOUT_RECV.( arguments_one ) 

	(  shift 98
	.  error


state 58
	expr:  TIMEOUT_PEEK.( arguments_one ) 

	(  shift 99
	.  error


state 59
	expr:  NONBLOCK_RECV.( arguments_one ) 

	(  shift 100
	.  error


state 60
	expr:  NONBLOCK_PEEK.( arguments_one ) 

	(  shift 101
	.  error


state 61
	expr:  [.arguments_one ] 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 103
	arguments_one  goto 102

state 62
	type:  [ ] type.    (103)

	.  reduce 103 (src line 568)


state 63
	type:  CHANNEL { types_one.} 

	}  shift 104
	.  error


state 64
	types_one:  type.    (99)
	types_one:  type., 
	types_one:  type., types_one 

	,  shift 105
	.  reduce 99 (src line 550)


state 65
	type:  CHANNEL [ ].{ types_one } 

	{  shift 106
	.  error


state 66
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	type:  CHANNEL [ expr.] { types_one } 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	]  shift 107
	.  error


state 67
	proc_def:  PROC IDENTIFIER ( parameters_zero ).{ statements_zero } ; 

	{  shift 108
	.  error


state 68
	init_block:  INIT { initvars_zero } ;.    (17)

	.  reduce 17 (src line 198)


state 69
	initvars_one:  initvar , initvars_one.    (22)

	.  reduce 22 (src line 223)


state 70
	initvar:  IDENTIFIER : type.tags_zero 
	tags_zero: .    (107)

	@  shift 112
	.  reduce 107 (src line 585)

	tags_zero  goto 109
	tags_one  goto 110
	tag  goto 111

state 71
	initvar:  IDENTIFIER : IDENTIFIER.( arguments_one ) tags_zero 
	type:  IDENTIFIER.    (102)

	(  shift 113
	.  reduce 102 (src line 564)


state 72
	data_def:  DATA IDENTIFIER { idents_one } ;.    (8)

	.  reduce 8 (src line 159)


state 73
	idents_one:  IDENTIFIER , idents_one.    (89)

	.  reduce 89 (src line 501)


state 74
	module_def:  MODULE IDENTIFIER ( parameters_zero ) {.module_body_zero } ; 
	module_body_zero: .    (10)

	CONST  shift 10
	PROC  shift 11
	INIT  shift 12
	.  reduce 10 (src line 171)

	const_def  goto 116
	proc_def  goto 117
	init_block  goto 118
	module_body_zero  goto 114
	module_body  goto 115

state 75
	parameters_one:  parameter , parameters_one.    (94)

	.  reduce 94 (src line 525)


state 76
	const_def:  CONST IDENTIFIER type ASSIGN expr ;.    (15)

	.  reduce 15 (src line 186)


state 77
	expr:  expr ADD.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 119

state 78
	expr:  expr SUB.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 120

state 79
	expr:  expr MUL.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 121

state 80
	expr:  expr QUO.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 122

state 81
	expr:  expr REM.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 123

state 82
	expr:  expr AND.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 124

state 83
	expr:  expr OR.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 125

state 84
	expr:  expr XOR.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 126

state 85
	expr:  expr SHL.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 127

state 86
	expr:  expr SHR.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 128

state 87
	expr:  expr LAND.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 129

state 88
	expr:  expr LOR.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 130

state 89
	expr:  expr EQL.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 131

state 90
	expr:  expr LSS.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 132

state 91
	expr:  expr GTR.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 133

state 92
	expr:  expr NEQ.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 134

state 93
	expr:  expr LEQ.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 135

state 94
	expr:  expr GEQ.expr 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 136

state 95
	expr:  NOT expr.    (61)
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 61 (src line 385)


state 96
	expr:  SUB expr.    (62)
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 62 (src line 389)


state 97
	expr:  ( expr.) 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	)  shift 137
	.  error


state 98
	expr:  TIMEOUT_RECV (.arguments_one ) 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 103
	arguments_one  goto 138

state 99
	expr:  TIMEOUT_PEEK (.arguments_one ) 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 103
	arguments_one  goto 139

state 100
	expr:  NONBLOCK_RECV (.arguments_one ) 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 103
	arguments_one  goto 140

state 101
	expr:  NONBLOCK_PEEK (.arguments_one ) 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 103
	arguments_one  goto 141

state 102
	expr:  [ arguments_one.] 

	]  shift 142
	.  error


state 103
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	arguments_one:  expr.    (96)
	arguments_one:  expr., 
	arguments_one:  expr., arguments_one 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	,  shift 143
	.  reduce 96 (src line 536)


state 104
	type:  CHANNEL { types_one }.    (104)

	.  reduce 104 (src line 572)


state 105
	types_one:  type ,.    (100)
	types_one:  type ,.types_one 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	[  shift 23
	.  reduce 100 (src line 555)

	types_one  goto 144
	type  goto 64

state 106
	type:  CHANNEL [ ] {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	[  shift 23
	.  error

	types_one  goto 145
	type  goto 64

state 107
	type:  CHANNEL [ expr ].{ types_one } 

	{  shift 146
	.  error


state 108
	proc_def:  PROC IDENTIFIER ( parameters_zero ) {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 149
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	CONST  shift 10
	VAR  shift 151
	IF  shift 152
	CHOICE  shift 153
	RECV  shift 154
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	PEEK  shift 155
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	SEND  shift 156
	FOR  shift 157
	BREAK  shift 158
	GOTO  shift 159
	SKIP  shift 160
	TRUE  shift 52
	FALSE  shift 53
	{  shift 150
	(  shift 56
	[  shift 61
	;  shift 162
	.  reduce 25 (src line 237)

	const_def  goto 163
	statements_zero  goto 147
	statement  goto 148
	expr  goto 161

state 109
	initvar:  IDENTIFIER : type tags_zero.    (23)

	.  reduce 23 (src line 228)


state 110
	tags_zero:  tags_one.    (108)

	.  reduce 108 (src line 590)


state 111
	tags_one:  tag.    (109)
	tags_one:  tag.tags_one 

	@  shift 112
	.  reduce 109 (src line 595)

	tags_one  goto 164
	tag  goto 111

state 112
	tag:  @.IDENTIFIER 

	IDENTIFIER  shift 165
	.  error


state 113
	initvar:  IDENTIFIER : IDENTIFIER (.arguments_one ) tags_zero 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 103
	arguments_one  goto 166

state 114
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero.} ; 

	}  shift 167
	.  error


state 115
	module_body_zero:  module_body.module_body_zero 
	module_body_zero: .    (10)

	CONST  shift 10
	PROC  shift 11
	INIT  shift 12
	.  reduce 10 (src line 171)

	const_def  goto 116
	proc_def  goto 117
	init_block  goto 118
	module_body_zero  goto 168
	module_body  goto 115

state 116
	module_body:  const_def.    (12)

	.  reduce 12 (src line 181)


state 117
	module_body:  proc_def.    (13)

	.  reduce 13 (src line 183)


state 118
	module_body:  init_block.    (14)

	.  reduce 14 (src line 184)


state 119
	expr:  expr.ADD expr 
	expr:  expr ADD expr.    (64)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	SHL  shift 85
	SHR  shift 86
	.  reduce 64 (src line 397)


state 120
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (65)
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	SHL  shift 85
	SHR  shift 86
	.  reduce 65 (src line 401)


state 121
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (66)
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 66 (src line 405)


state 122
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr QUO expr.    (67)
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 67 (src line 409)


state 123
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr REM expr.    (68)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 68 (src line 413)


state 124
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (69)
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 69 (src line 417)


state 125
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (70)
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	SHL  shift 85
	SHR  shift 86
	.  reduce 70 (src line 421)


state 126
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr XOR expr.    (71)
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	SHL  shift 85
	SHR  shift 86
	.  reduce 71 (src line 425)


state 127
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr SHL expr.    (72)
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 72 (src line 429)


state 128
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr SHR expr.    (73)
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 73 (src line 433)


state 129
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr LAND expr.    (74)
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	.  reduce 74 (src line 437)


state 130
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr LOR expr.    (75)
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	.  reduce 75 (src line 441)


state 131
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr EQL expr.    (76)
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	.  reduce 76 (src line 445)


state 132
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr LSS expr.    (77)
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	.  reduce 77 (src line 449)


state 133
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr GTR expr.    (78)
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	.  reduce 78 (src line 453)


state 134
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (79)
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	.  reduce 79 (src line 457)


state 135
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr LEQ expr.    (80)
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	.  reduce 80 (src line 461)


state 136
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	expr:  expr GEQ expr.    (81)

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	.  reduce 81 (src line 465)


state 137
	expr:  ( expr ).    (63)

	.  reduce 63 (src line 393)


state 138
	expr:  TIMEOUT_RECV ( arguments_one.) 

	)  shift 169
	.  error


state 139
	expr:  TIMEOUT_PEEK ( arguments_one.) 

	)  shift 170
	.  error


state 140
	expr:  NONBLOCK_RECV ( arguments_one.) 

	)  shift 171
	.  error


state 141
	expr:  NONBLOCK_PEEK ( arguments_one.) 

	)  shift 172
	.  error


state 142
	expr:  [ arguments_one ].    (86)

	.  reduce 86 (src line 485)


state 143
	arguments_one:  expr ,.    (97)
	arguments_one:  expr ,.arguments_one 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  reduce 97 (src line 541)

	expr  goto 103
	arguments_one  goto 173

state 144
	types_one:  type , types_one.    (101)

	.  reduce 101 (src line 559)


state 145
	type:  CHANNEL [ ] { types_one.} 

	}  shift 174
	.  error


state 146
	type:  CHANNEL [ expr ] {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	[  shift 23
	.  error

	types_one  goto 175
	type  goto 64

state 147
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero.} ; 

	}  shift 176
	.  error


state 148
	statements_zero:  statement.statements_zero 
	statements_zero: .    (25)

	IDENTIFIER  shift 149
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	CONST  shift 10
	VAR  shift 151
	IF  shift 152
	CHOICE  shift 153
	RECV  shift 154
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	PEEK  shift 155
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	SEND  shift 156
	FOR  shift 157
	BREAK  shift 158
	GOTO  shift 159
	SKIP  shift 160
	TRUE  shift 52
	FALSE  shift 53
	{  shift 150
	(  shift 56
	[  shift 61
	;  shift 162
	.  reduce 25 (src line 237)

	const_def  goto 163
	statements_zero  goto 177
	statement  goto 148
	expr  goto 161

state 149
	statement:  IDENTIFIER.: statement 
	statement:  IDENTIFIER.ASSIGN expr ; 
	statement:  IDENTIFIER.ADD_ASSIGN expr ; 
	statement:  IDENTIFIER.SUB_ASSIGN expr ; 
	statement:  IDENTIFIER.MUL_ASSIGN expr ; 
	statement:  IDENTIFIER.QUO_ASSIGN expr ; 
	statement:  IDENTIFIER.REM_ASSIGN expr ; 
	statement:  IDENTIFIER.AND_ASSIGN expr ; 
	statement:  IDENTIFIER.OR_ASSIGN expr ; 
	statement:  IDENTIFIER.XOR_ASSIGN expr ; 
	statement:  IDENTIFIER.SHL_ASSIGN expr ; 
	statement:  IDENTIFIER.SHR_ASSIGN expr ; 
	expr:  IDENTIFIER.    (57)

	ADD_ASSIGN  shift 180
	SUB_ASSIGN  shift 181
	MUL_ASSIGN  shift 182
	QUO_ASSIGN  shift 183
	REM_ASSIGN  shift 184
	AND_ASSIGN  shift 185
	OR_ASSIGN  shift 186
	XOR_ASSIGN  shift 187
	SHL_ASSIGN  shift 188
	SHR_ASSIGN  shift 189
	ASSIGN  shift 179
	:  shift 178
	.  reduce 57 (src line 369)


state 150
	statement:  {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 149
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	CONST  shift 10
	VAR  shift 151
	IF  shift 152
	CHOICE  shift 153
	RECV  shift 154
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	PEEK  shift 155
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	SEND  shift 156
	FOR  shift 157
	BREAK  shift 158
	GOTO  shift 159
	SKIP  shift 160
	TRUE  shift 52
	FALSE  shift 53
	{  shift 150
	(  shift 56
	[  shift 61
	;  shift 162
	.  reduce 25 (src line 237)

	const_def  goto 163
	statements_zero  goto 190
	statement  goto 148
	expr  goto 161

state 151
	statement:  VAR.IDENTIFIER type ; 
	statement:  VAR.IDENTIFIER type ASSIGN expr ; 

	IDENTIFIER  shift 191
	.  error


state 152
	statement:  IF.expr { statements_zero } ; 
	statement:  IF.expr { statements_zero } ELSE { statements_zero } ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 192

state 153
	statement:  CHOICE.blocks_one ; 

	{  shift 194
	.  error

	blocks_one  goto 193

state 154
	statement:  RECV.( arguments_one ) ; 

	(  shift 195
	.  error


state 155
	statement:  PEEK.( arguments_one ) ; 

	(  shift 196
	.  error


state 156
	statement:  SEND.( arguments_one ) ; 

	(  shift 197
	.  error


state 157
	statement:  FOR.{ statements_zero } ; 
	statement:  FOR.IDENTIFIER IN expr { statements_zero } ; 
	statement:  FOR.IDENTIFIER IN RANGE expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 199
	{  shift 198
	.  error


state 158
	statement:  BREAK.; 

	;  shift 200
	.  error


state 159
	statement:  GOTO.IDENTIFIER ; 

	IDENTIFIER  shift 201
	.  error


state 160
	statement:  SKIP.; 

	;  shift 202
	.  error


state 161
	statement:  expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 203
	.  error


state 162
	statement:  ;.    (55)

	.  reduce 55 (src line 360)


state 163
	statement:  const_def.    (56)

	.  reduce 56 (src line 364)


state 164
	tags_one:  tag tags_one.    (110)

	.  reduce 110 (src line 600)


state 165
	tag:  @ IDENTIFIER.    (111)

	.  reduce 111 (src line 605)


state 166
	initvar:  IDENTIFIER : IDENTIFIER ( arguments_one.) tags_zero 

	)  shift 204
	.  error


state 167
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero }.; 

	;  shift 205
	.  error


state 168
	module_body_zero:  module_body module_body_zero.    (11)

	.  reduce 11 (src line 176)


state 169
	expr:  TIMEOUT_RECV ( arguments_one ).    (82)

	.  reduce 82 (src line 469)


state 170
	expr:  TIMEOUT_PEEK ( arguments_one ).    (83)

	.  reduce 83 (src line 473)


state 171
	expr:  NONBLOCK_RECV ( arguments_one ).    (84)

	.  reduce 84 (src line 477)


state 172
	expr:  NONBLOCK_PEEK ( arguments_one ).    (85)

	.  reduce 85 (src line 481)


state 173
	arguments_one:  expr , arguments_one.    (98)

	.  reduce 98 (src line 545)


state 174
	type:  CHANNEL [ ] { types_one }.    (105)

	.  reduce 105 (src line 576)


state 175
	type:  CHANNEL [ expr ] { types_one.} 

	}  shift 206
	.  error


state 176
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero }.; 

	;  shift 207
	.  error


state 177
	statements_zero:  statement statements_zero.    (26)

	.  reduce 26 (src line 242)


state 178
	statement:  IDENTIFIER :.statement 

	IDENTIFIER  shift 149
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	CONST  shift 10
	VAR  shift 151
	IF  shift 152
	CHOICE  shift 153
	RECV  shift 154
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	PEEK  shift 155
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	SEND  shift 156
	FOR  shift 157
	BREAK  shift 158
	GOTO  shift 159
	SKIP  shift 160
	TRUE  shift 52
	FALSE  shift 53
	{  shift 150
	(  shift 56
	[  shift 61
	;  shift 162
	.  error

	const_def  goto 163
	statement  goto 208
	expr  goto 161

state 179
	statement:  IDENTIFIER ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 209

state 180
	statement:  IDENTIFIER ADD_ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 210

state 181
	statement:  IDENTIFIER SUB_ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 211

state 182
	statement:  IDENTIFIER MUL_ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 212

state 183
	statement:  IDENTIFIER QUO_ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 213

state 184
	statement:  IDENTIFIER REM_ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 214

state 185
	statement:  IDENTIFIER AND_ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 215

state 186
	statement:  IDENTIFIER OR_ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 216

state 187
	statement:  IDENTIFIER XOR_ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 217

state 188
	statement:  IDENTIFIER SHL_ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 218

state 189
	statement:  IDENTIFIER SHR_ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 219

state 190
	statement:  { statements_zero.} ; 

	}  shift 220
	.  error


state 191
	statement:  VAR IDENTIFIER.type ; 
	statement:  VAR IDENTIFIER.type ASSIGN expr ; 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	[  shift 23
	.  error

	type  goto 221

state 192
	statement:  IF expr.{ statements_zero } ; 
	statement:  IF expr.{ statements_zero } ELSE { statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	{  shift 222
	.  error


state 193
	statement:  CHOICE blocks_one.; 

	;  shift 223
	.  error


state 194
	blocks_one:  {.statements_zero } 
	blocks_one:  {.statements_zero } , 
	blocks_one:  {.statements_zero } , blocks_one 
	statements_zero: .    (25)

	IDENTIFIER  shift 149
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	CONST  shift 10
	VAR  shift 151
	IF  shift 152
	CHOICE  shift 153
	RECV  shift 154
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	PEEK  shift 155
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	SEND  shift 156
	FOR  shift 157
	BREAK  shift 158
	GOTO  shift 159
	SKIP  shift 160
	TRUE  shift 52
	FALSE  shift 53
	{  shift 150
	(  shift 56
	[  shift 61
	;  shift 162
	.  reduce 25 (src line 237)

	const_def  goto 163
	statements_zero  goto 224
	statement  goto 148
	expr  goto 161

state 195
	statement:  RECV (.arguments_one ) ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 103
	arguments_one  goto 225

state 196
	statement:  PEEK (.arguments_one ) ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 103
	arguments_one  goto 226

state 197
	statement:  SEND (.arguments_one ) ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 103
	arguments_one  goto 227

state 198
	statement:  FOR {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 149
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	CONST  shift 10
	VAR  shift 151
	IF  shift 152
	CHOICE  shift 153
	RECV  shift 154
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	PEEK  shift 155
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	SEND  shift 156
	FOR  shift 157
	BREAK  shift 158
	GOTO  shift 159
	SKIP  shift 160
	TRUE  shift 52
	FALSE  shift 53
	{  shift 150
	(  shift 56
	[  shift 61
	;  shift 162
	.  reduce 25 (src line 237)

	const_def  goto 163
	statements_zero  goto 228
	statement  goto 148
	expr  goto 161

state 199
	statement:  FOR IDENTIFIER.IN expr { statements_zero } ; 
	statement:  FOR IDENTIFIER.IN RANGE expr TO expr { statements_zero } ; 

	IN  shift 229
	.  error


state 200
	statement:  BREAK ;.    (51)

	.  reduce 51 (src line 344)


state 201
	statement:  GOTO IDENTIFIER.; 

	;  shift 230
	.  error


state 202
	statement:  SKIP ;.    (53)

	.  reduce 53 (src line 352)


state 203
	statement:  expr ;.    (54)

	.  reduce 54 (src line 356)


state 204
	initvar:  IDENTIFIER : IDENTIFIER ( arguments_one ).tags_zero 
	tags_zero: .    (107)

	@  shift 112
	.  reduce 107 (src line 585)

	tags_zero  goto 231
	tags_one  goto 110
	tag  goto 111

state 205
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero } ;.    (9)

	.  reduce 9 (src line 165)


state 206
	type:  CHANNEL [ expr ] { types_one }.    (106)

	.  reduce 106 (src line 580)


state 207
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero } ;.    (16)

	.  reduce 16 (src line 192)


state 208
	statement:  IDENTIFIER : statement.    (27)

	.  reduce 27 (src line 247)


state 209
	statement:  IDENTIFIER ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 232
	.  error


state 210
	statement:  IDENTIFIER ADD_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 233
	.  error


state 211
	statement:  IDENTIFIER SUB_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 234
	.  error


state 212
	statement:  IDENTIFIER MUL_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 235
	.  error


state 213
	statement:  IDENTIFIER QUO_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 236
	.  error


state 214
	statement:  IDENTIFIER REM_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 237
	.  error


state 215
	statement:  IDENTIFIER AND_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 238
	.  error


state 216
	statement:  IDENTIFIER OR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 239
	.  error


state 217
	statement:  IDENTIFIER XOR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 240
	.  error


state 218
	statement:  IDENTIFIER SHL_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 241
	.  error


state 219
	statement:  IDENTIFIER SHR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 242
	.  error


state 220
	statement:  { statements_zero }.; 

	;  shift 243
	.  error


state 221
	statement:  VAR IDENTIFIER type.; 
	statement:  VAR IDENTIFIER type.ASSIGN expr ; 

	ASSIGN  shift 245
	;  shift 244
	.  error


state 222
	statement:  IF expr {.statements_zero } ; 
	statement:  IF expr {.statements_zero } ELSE { statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 149
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	CONST  shift 10
	VAR  shift 151
	IF  shift 152
	CHOICE  shift 153
	RECV  shift 154
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	PEEK  shift 155
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	SEND  shift 156
	FOR  shift 157
	BREAK  shift 158
	GOTO  shift 159
	SKIP  shift 160
	TRUE  shift 52
	FALSE  shift 53
	{  shift 150
	(  shift 56
	[  shift 61
	;  shift 162
	.  reduce 25 (src line 237)

	const_def  goto 163
	statements_zero  goto 246
	statement  goto 148
	expr  goto 161

state 223
	statement:  CHOICE blocks_one ;.    (44)

	.  reduce 44 (src line 316)


state 224
	blocks_one:  { statements_zero.} 
	blocks_one:  { statements_zero.} , 
	blocks_one:  { statements_zero.} , blocks_one 

	}  shift 247
	.  error


state 225
	statement:  RECV ( arguments_one.) ; 

	)  shift 248
	.  error


state 226
	statement:  PEEK ( arguments_one.) ; 

	)  shift 249
	.  error


state 227
	statement:  SEND ( arguments_one.) ; 

	)  shift 250
	.  error


state 228
	statement:  FOR { statements_zero.} ; 

	}  shift 251
	.  error


state 229
	statement:  FOR IDENTIFIER IN.expr { statements_zero } ; 
	statement:  FOR IDENTIFIER IN.RANGE expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	RANGE  shift 253
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 252

state 230
	statement:  GOTO IDENTIFIER ;.    (52)

	.  reduce 52 (src line 348)


state 231
	initvar:  IDENTIFIER : IDENTIFIER ( arguments_one ) tags_zero.    (24)

	.  reduce 24 (src line 232)


state 232
	statement:  IDENTIFIER ASSIGN expr ;.    (33)

	.  reduce 33 (src line 272)


state 233
	statement:  IDENTIFIER ADD_ASSIGN expr ;.    (34)

	.  reduce 34 (src line 276)


state 234
	statement:  IDENTIFIER SUB_ASSIGN expr ;.    (35)

	.  reduce 35 (src line 280)


state 235
	statement:  IDENTIFIER MUL_ASSIGN expr ;.    (36)

	.  reduce 36 (src line 284)


state 236
	statement:  IDENTIFIER QUO_ASSIGN expr ;.    (37)

	.  reduce 37 (src line 288)


state 237
	statement:  IDENTIFIER REM_ASSIGN expr ;.    (38)

	.  reduce 38 (src line 292)


state 238
	statement:  IDENTIFIER AND_ASSIGN expr ;.    (39)

	.  reduce 39 (src line 296)


state 239
	statement:  IDENTIFIER OR_ASSIGN expr ;.    (40)

	.  reduce 40 (src line 300)


state 240
	statement:  IDENTIFIER XOR_ASSIGN expr ;.    (41)

	.  reduce 41 (src line 304)


state 241
	statement:  IDENTIFIER SHL_ASSIGN expr ;.    (42)

	.  reduce 42 (src line 308)


state 242
	statement:  IDENTIFIER SHR_ASSIGN expr ;.    (43)

	.  reduce 43 (src line 312)


state 243
	statement:  { statements_zero } ;.    (28)

	.  reduce 28 (src line 252)


state 244
	statement:  VAR IDENTIFIER type ;.    (29)

	.  reduce 29 (src line 256)


state 245
	statement:  VAR IDENTIFIER type ASSIGN.expr ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 254

state 246
	statement:  IF expr { statements_zero.} ; 
	statement:  IF expr { statements_zero.} ELSE { statements_zero } ; 

	}  shift 255
	.  error


state 247
	blocks_one:  { statements_zero }.    (112)
	blocks_one:  { statements_zero }., 
	blocks_one:  { statements_zero }., blocks_one 

	,  shift 256
	.  reduce 112 (src line 611)


state 248
	statement:  RECV ( arguments_one ).; 

	;  shift 257
	.  error


state 249
	statement:  PEEK ( arguments_one ).; 

	;  shift 258
	.  error


state 250
	statement:  SEND ( arguments_one ).; 

	;  shift 259
	.  error


state 251
	statement:  FOR { statements_zero }.; 

	;  shift 260
	.  error


state 252
	statement:  FOR IDENTIFIER IN expr.{ statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	{  shift 261
	.  error


state 253
	statement:  FOR IDENTIFIER IN RANGE.expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 262

state 254
	statement:  VAR IDENTIFIER type ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	;  shift 263
	.  error


state 255
	statement:  IF expr { statements_zero }.; 
	statement:  IF expr { statements_zero }.ELSE { statements_zero } ; 

	ELSE  shift 265
	;  shift 264
	.  error


state 256
	blocks_one:  { statements_zero } ,.    (113)
	blocks_one:  { statements_zero } ,.blocks_one 

	{  shift 194
	.  reduce 113 (src line 616)

	blocks_one  goto 266

state 257
	statement:  RECV ( arguments_one ) ;.    (45)

	.  reduce 45 (src line 320)


state 258
	statement:  PEEK ( arguments_one ) ;.    (46)

	.  reduce 46 (src line 324)


state 259
	statement:  SEND ( arguments_one ) ;.    (47)

	.  reduce 47 (src line 328)


state 260
	statement:  FOR { statements_zero } ;.    (48)

	.  reduce 48 (src line 332)


state 261
	statement:  FOR IDENTIFIER IN expr {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 149
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	CONST  shift 10
	VAR  shift 151
	IF  shift 152
	CHOICE  shift 153
	RECV  shift 154
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	PEEK  shift 155
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	SEND  shift 156
	FOR  shift 157
	BREAK  shift 158
	GOTO  shift 159
	SKIP  shift 160
	TRUE  shift 52
	FALSE  shift 53
	{  shift 150
	(  shift 56
	[  shift 61
	;  shift 162
	.  reduce 25 (src line 237)

	const_def  goto 163
	statements_zero  goto 267
	statement  goto 148
	expr  goto 161

state 262
	statement:  FOR IDENTIFIER IN RANGE expr.TO expr { statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	TO  shift 268
	.  error


state 263
	statement:  VAR IDENTIFIER type ASSIGN expr ;.    (30)

	.  reduce 30 (src line 260)


state 264
	statement:  IF expr { statements_zero } ;.    (31)

	.  reduce 31 (src line 264)


state 265
	statement:  IF expr { statements_zero } ELSE.{ statements_zero } ; 

	{  shift 269
	.  error


state 266
	blocks_one:  { statements_zero } , blocks_one.    (114)

	.  reduce 114 (src line 620)


state 267
	statement:  FOR IDENTIFIER IN expr { statements_zero.} ; 

	}  shift 270
	.  error


state 268
	statement:  FOR IDENTIFIER IN RANGE expr TO.expr { statements_zero } ; 

	IDENTIFIER  shift 50
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	TRUE  shift 52
	FALSE  shift 53
	(  shift 56
	[  shift 61
	.  error

	expr  goto 271

state 269
	statement:  IF expr { statements_zero } ELSE {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 149
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	CONST  shift 10
	VAR  shift 151
	IF  shift 152
	CHOICE  shift 153
	RECV  shift 154
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	PEEK  shift 155
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	SEND  shift 156
	FOR  shift 157
	BREAK  shift 158
	GOTO  shift 159
	SKIP  shift 160
	TRUE  shift 52
	FALSE  shift 53
	{  shift 150
	(  shift 56
	[  shift 61
	;  shift 162
	.  reduce 25 (src line 237)

	const_def  goto 163
	statements_zero  goto 272
	statement  goto 148
	expr  goto 161

state 270
	statement:  FOR IDENTIFIER IN expr { statements_zero }.; 

	;  shift 273
	.  error


state 271
	statement:  FOR IDENTIFIER IN RANGE expr TO expr.{ statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 77
	SUB  shift 78
	MUL  shift 79
	QUO  shift 80
	REM  shift 81
	AND  shift 82
	OR  shift 83
	XOR  shift 84
	SHL  shift 85
	SHR  shift 86
	LAND  shift 87
	LOR  shift 88
	EQL  shift 89
	LSS  shift 90
	GTR  shift 91
	NEQ  shift 92
	LEQ  shift 93
	GEQ  shift 94
	{  shift 274
	.  error


state 272
	statement:  IF expr { statements_zero } ELSE { statements_zero.} ; 

	}  shift 275
	.  error


state 273
	statement:  FOR IDENTIFIER IN expr { statements_zero } ;.    (49)

	.  reduce 49 (src line 336)


state 274
	statement:  FOR IDENTIFIER IN RANGE expr TO expr {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 149
	NUMBER  shift 51
	SUB  shift 55
	NOT  shift 54
	CONST  shift 10
	VAR  shift 151
	IF  shift 152
	CHOICE  shift 153
	RECV  shift 154
	TIMEOUT_RECV  shift 57
	NONBLOCK_RECV  shift 59
	PEEK  shift 155
	TIMEOUT_PEEK  shift 58
	NONBLOCK_PEEK  shift 60
	SEND  shift 156
	FOR  shift 157
	BREAK  shift 158
	GOTO  shift 159
	SKIP  shift 160
	TRUE  shift 52
	FALSE  shift 53
	{  shift 150
	(  shift 56
	[  shift 61
	;  shift 162
	.  reduce 25 (src line 237)

	const_def  goto 163
	statements_zero  goto 276
	statement  goto 148
	expr  goto 161

state 275
	statement:  IF expr { statements_zero } ELSE { statements_zero }.; 

	;  shift 277
	.  error


state 276
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero.} ; 

	}  shift 278
	.  error


state 277
	statement:  IF expr { statements_zero } ELSE { statements_zero } ;.    (32)

	.  reduce 32 (src line 268)


state 278
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero }.; 

	;  shift 279
	.  error


state 279
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero } ;.    (50)

	.  reduce 50 (src line 340)


73 terminals, 27 nonterminals
115 grammar rules, 280/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
76 working sets used
memory: parser 165/30000
105 extra closures
1505 shift entries, 1 exceptions
118 goto entries
42 entries saved by goto default
Optimizer space used: output 1004/30000
1004 table entries, 262 zero
maximum spread: 73, maximum offset: 274
