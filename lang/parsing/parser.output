
state 0
	$accept: .spec $end 

	DATA  shift 8
	CONST  shift 10
	MODULE  shift 9
	PROC  shift 11
	INIT  shift 12
	.  error

	spec  goto 1
	toplevel_body  goto 2
	data_def  goto 3
	module_def  goto 4
	const_def  goto 5
	proc_def  goto 6
	init_block  goto 7

state 1
	$accept:  spec.$end 

	$end  accept
	.  error


state 2
	spec:  toplevel_body.    (1)
	spec:  toplevel_body.spec 

	DATA  shift 8
	CONST  shift 10
	MODULE  shift 9
	PROC  shift 11
	INIT  shift 12
	.  reduce 1 (src line 134)

	spec  goto 13
	toplevel_body  goto 2
	data_def  goto 3
	module_def  goto 4
	const_def  goto 5
	proc_def  goto 6
	init_block  goto 7

state 3
	toplevel_body:  data_def.    (3)

	.  reduce 3 (src line 149)


state 4
	toplevel_body:  module_def.    (4)

	.  reduce 4 (src line 151)


state 5
	toplevel_body:  const_def.    (5)

	.  reduce 5 (src line 152)


state 6
	toplevel_body:  proc_def.    (6)

	.  reduce 6 (src line 153)


state 7
	toplevel_body:  init_block.    (7)

	.  reduce 7 (src line 154)


state 8
	data_def:  DATA.IDENTIFIER { idents_one } ; 

	IDENTIFIER  shift 14
	.  error


state 9
	module_def:  MODULE.IDENTIFIER ( parameters_zero ) { module_body_zero } ; 

	IDENTIFIER  shift 15
	.  error


state 10
	const_def:  CONST.IDENTIFIER type ASSIGN expr ; 

	IDENTIFIER  shift 16
	.  error


state 11
	proc_def:  PROC.IDENTIFIER ( parameters_zero ) { statements_zero } ; 

	IDENTIFIER  shift 17
	.  error


state 12
	init_block:  INIT.{ initvars_zero } ; 

	{  shift 18
	.  error


state 13
	spec:  toplevel_body spec.    (2)

	.  reduce 2 (src line 141)


state 14
	data_def:  DATA IDENTIFIER.{ idents_one } ; 

	{  shift 19
	.  error


state 15
	module_def:  MODULE IDENTIFIER.( parameters_zero ) { module_body_zero } ; 

	(  shift 20
	.  error


state 16
	const_def:  CONST IDENTIFIER.type ASSIGN expr ; 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	type  goto 21

state 17
	proc_def:  PROC IDENTIFIER.( parameters_zero ) { statements_zero } ; 

	(  shift 26
	.  error


state 18
	init_block:  INIT {.initvars_zero } ; 
	initvars_zero: .    (18)

	IDENTIFIER  shift 30
	.  reduce 18 (src line 201)

	initvars_zero  goto 27
	initvars_one  goto 28
	initvar  goto 29

state 19
	data_def:  DATA IDENTIFIER {.idents_one } ; 

	IDENTIFIER  shift 32
	.  error

	idents_one  goto 31

state 20
	module_def:  MODULE IDENTIFIER (.parameters_zero ) { module_body_zero } ; 
	parameters_zero: .    (90)

	IDENTIFIER  shift 36
	.  reduce 90 (src line 503)

	parameters_zero  goto 33
	parameters_one  goto 34
	parameter  goto 35

state 21
	const_def:  CONST IDENTIFIER type.ASSIGN expr ; 

	ASSIGN  shift 37
	.  error


state 22
	type:  IDENTIFIER.    (102)

	.  reduce 102 (src line 561)


state 23
	type:  [.] type 

	]  shift 38
	.  error


state 24
	type:  CHANNEL.{ types_one } 
	type:  CHANNEL.[ ] { types_one } 
	type:  CHANNEL.[ expr ] { types_one } 

	{  shift 39
	[  shift 40
	.  error


state 25
	type:  UNSTABLE.CHANNEL { types_one } 
	type:  UNSTABLE.CHANNEL [ ] { types_one } 
	type:  UNSTABLE.CHANNEL [ expr ] { types_one } 

	CHANNEL  shift 41
	.  error


state 26
	proc_def:  PROC IDENTIFIER (.parameters_zero ) { statements_zero } ; 
	parameters_zero: .    (90)

	IDENTIFIER  shift 36
	.  reduce 90 (src line 503)

	parameters_zero  goto 42
	parameters_one  goto 34
	parameter  goto 35

state 27
	init_block:  INIT { initvars_zero.} ; 

	}  shift 43
	.  error


state 28
	initvars_zero:  initvars_one.    (19)

	.  reduce 19 (src line 206)


state 29
	initvars_one:  initvar.    (20)
	initvars_one:  initvar., 
	initvars_one:  initvar., initvars_one 

	,  shift 44
	.  reduce 20 (src line 211)


state 30
	initvar:  IDENTIFIER.: type 
	initvar:  IDENTIFIER.: IDENTIFIER ( arguments_one ) 

	:  shift 45
	.  error


state 31
	data_def:  DATA IDENTIFIER { idents_one.} ; 

	}  shift 46
	.  error


state 32
	idents_one:  IDENTIFIER.    (87)
	idents_one:  IDENTIFIER., 
	idents_one:  IDENTIFIER., idents_one 

	,  shift 47
	.  reduce 87 (src line 489)


state 33
	module_def:  MODULE IDENTIFIER ( parameters_zero.) { module_body_zero } ; 

	)  shift 48
	.  error


state 34
	parameters_zero:  parameters_one.    (91)

	.  reduce 91 (src line 508)


state 35
	parameters_one:  parameter.    (92)
	parameters_one:  parameter., 
	parameters_one:  parameter., parameters_one 

	,  shift 49
	.  reduce 92 (src line 513)


state 36
	parameter:  IDENTIFIER.type 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	type  goto 50

state 37
	const_def:  CONST IDENTIFIER type ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 51

state 38
	type:  [ ].type 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	type  goto 64

state 39
	type:  CHANNEL {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 65
	type  goto 66

state 40
	type:  CHANNEL [.] { types_one } 
	type:  CHANNEL [.expr ] { types_one } 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	]  shift 67
	.  error

	expr  goto 68

state 41
	type:  UNSTABLE CHANNEL.{ types_one } 
	type:  UNSTABLE CHANNEL.[ ] { types_one } 
	type:  UNSTABLE CHANNEL.[ expr ] { types_one } 

	{  shift 69
	[  shift 70
	.  error


state 42
	proc_def:  PROC IDENTIFIER ( parameters_zero.) { statements_zero } ; 

	)  shift 71
	.  error


state 43
	init_block:  INIT { initvars_zero }.; 

	;  shift 72
	.  error


state 44
	initvars_one:  initvar ,.    (21)
	initvars_one:  initvar ,.initvars_one 

	IDENTIFIER  shift 30
	.  reduce 21 (src line 216)

	initvars_one  goto 73
	initvar  goto 29

state 45
	initvar:  IDENTIFIER :.type 
	initvar:  IDENTIFIER :.IDENTIFIER ( arguments_one ) 

	IDENTIFIER  shift 75
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	type  goto 74

state 46
	data_def:  DATA IDENTIFIER { idents_one }.; 

	;  shift 76
	.  error


state 47
	idents_one:  IDENTIFIER ,.    (88)
	idents_one:  IDENTIFIER ,.idents_one 

	IDENTIFIER  shift 32
	.  reduce 88 (src line 494)

	idents_one  goto 77

state 48
	module_def:  MODULE IDENTIFIER ( parameters_zero ).{ module_body_zero } ; 

	{  shift 78
	.  error


state 49
	parameters_one:  parameter ,.    (93)
	parameters_one:  parameter ,.parameters_one 

	IDENTIFIER  shift 36
	.  reduce 93 (src line 518)

	parameters_one  goto 79
	parameter  goto 35

state 50
	parameter:  IDENTIFIER type.    (95)

	.  reduce 95 (src line 527)


state 51
	const_def:  CONST IDENTIFIER type ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 80
	.  error


state 52
	expr:  IDENTIFIER.    (57)

	.  reduce 57 (src line 366)


state 53
	expr:  NUMBER.    (58)

	.  reduce 58 (src line 370)


state 54
	expr:  TRUE.    (59)

	.  reduce 59 (src line 374)


state 55
	expr:  FALSE.    (60)

	.  reduce 60 (src line 378)


state 56
	expr:  NOT.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 99

state 57
	expr:  SUB.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 100

state 58
	expr:  (.expr ) 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 101

state 59
	expr:  TIMEOUT_RECV.( arguments_one ) 

	(  shift 102
	.  error


state 60
	expr:  TIMEOUT_PEEK.( arguments_one ) 

	(  shift 103
	.  error


state 61
	expr:  NONBLOCK_RECV.( arguments_one ) 

	(  shift 104
	.  error


state 62
	expr:  NONBLOCK_PEEK.( arguments_one ) 

	(  shift 105
	.  error


state 63
	expr:  [.arguments_one ] 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 107
	arguments_one  goto 106

state 64
	type:  [ ] type.    (103)

	.  reduce 103 (src line 565)


state 65
	type:  CHANNEL { types_one.} 

	}  shift 108
	.  error


state 66
	types_one:  type.    (99)
	types_one:  type., 
	types_one:  type., types_one 

	,  shift 109
	.  reduce 99 (src line 547)


state 67
	type:  CHANNEL [ ].{ types_one } 

	{  shift 110
	.  error


state 68
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	type:  CHANNEL [ expr.] { types_one } 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	]  shift 111
	.  error


state 69
	type:  UNSTABLE CHANNEL {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 112
	type  goto 66

state 70
	type:  UNSTABLE CHANNEL [.] { types_one } 
	type:  UNSTABLE CHANNEL [.expr ] { types_one } 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	]  shift 113
	.  error

	expr  goto 114

state 71
	proc_def:  PROC IDENTIFIER ( parameters_zero ).{ statements_zero } ; 

	{  shift 115
	.  error


state 72
	init_block:  INIT { initvars_zero } ;.    (17)

	.  reduce 17 (src line 195)


state 73
	initvars_one:  initvar , initvars_one.    (22)

	.  reduce 22 (src line 220)


state 74
	initvar:  IDENTIFIER : type.    (23)

	.  reduce 23 (src line 225)


state 75
	initvar:  IDENTIFIER : IDENTIFIER.( arguments_one ) 
	type:  IDENTIFIER.    (102)

	(  shift 116
	.  reduce 102 (src line 561)


state 76
	data_def:  DATA IDENTIFIER { idents_one } ;.    (8)

	.  reduce 8 (src line 156)


state 77
	idents_one:  IDENTIFIER , idents_one.    (89)

	.  reduce 89 (src line 498)


state 78
	module_def:  MODULE IDENTIFIER ( parameters_zero ) {.module_body_zero } ; 
	module_body_zero: .    (10)

	CONST  shift 10
	PROC  shift 11
	INIT  shift 12
	.  reduce 10 (src line 168)

	const_def  goto 119
	proc_def  goto 120
	init_block  goto 121
	module_body_zero  goto 117
	module_body  goto 118

state 79
	parameters_one:  parameter , parameters_one.    (94)

	.  reduce 94 (src line 522)


state 80
	const_def:  CONST IDENTIFIER type ASSIGN expr ;.    (15)

	.  reduce 15 (src line 183)


state 81
	expr:  expr ADD.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 122

state 82
	expr:  expr SUB.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 123

state 83
	expr:  expr MUL.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 124

state 84
	expr:  expr QUO.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 125

state 85
	expr:  expr REM.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 126

state 86
	expr:  expr AND.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 127

state 87
	expr:  expr OR.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 128

state 88
	expr:  expr XOR.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 129

state 89
	expr:  expr SHL.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 130

state 90
	expr:  expr SHR.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 131

state 91
	expr:  expr LAND.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 132

state 92
	expr:  expr LOR.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 133

state 93
	expr:  expr EQL.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 134

state 94
	expr:  expr LSS.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 135

state 95
	expr:  expr GTR.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 136

state 96
	expr:  expr NEQ.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 137

state 97
	expr:  expr LEQ.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 138

state 98
	expr:  expr GEQ.expr 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 139

state 99
	expr:  NOT expr.    (61)
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 61 (src line 382)


state 100
	expr:  SUB expr.    (62)
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 62 (src line 386)


state 101
	expr:  ( expr.) 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	)  shift 140
	.  error


state 102
	expr:  TIMEOUT_RECV (.arguments_one ) 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 107
	arguments_one  goto 141

state 103
	expr:  TIMEOUT_PEEK (.arguments_one ) 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 107
	arguments_one  goto 142

state 104
	expr:  NONBLOCK_RECV (.arguments_one ) 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 107
	arguments_one  goto 143

state 105
	expr:  NONBLOCK_PEEK (.arguments_one ) 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 107
	arguments_one  goto 144

state 106
	expr:  [ arguments_one.] 

	]  shift 145
	.  error


state 107
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	arguments_one:  expr.    (96)
	arguments_one:  expr., 
	arguments_one:  expr., arguments_one 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	,  shift 146
	.  reduce 96 (src line 533)


state 108
	type:  CHANNEL { types_one }.    (104)

	.  reduce 104 (src line 569)


state 109
	types_one:  type ,.    (100)
	types_one:  type ,.types_one 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  reduce 100 (src line 552)

	types_one  goto 147
	type  goto 66

state 110
	type:  CHANNEL [ ] {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 148
	type  goto 66

state 111
	type:  CHANNEL [ expr ].{ types_one } 

	{  shift 149
	.  error


state 112
	type:  UNSTABLE CHANNEL { types_one.} 

	}  shift 150
	.  error


state 113
	type:  UNSTABLE CHANNEL [ ].{ types_one } 

	{  shift 151
	.  error


state 114
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	type:  UNSTABLE CHANNEL [ expr.] { types_one } 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	]  shift 152
	.  error


state 115
	proc_def:  PROC IDENTIFIER ( parameters_zero ) {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 155
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	CONST  shift 10
	VAR  shift 157
	IF  shift 158
	CHOICE  shift 159
	RECV  shift 160
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	PEEK  shift 161
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	SEND  shift 162
	FOR  shift 163
	BREAK  shift 164
	GOTO  shift 165
	SKIP  shift 166
	TRUE  shift 54
	FALSE  shift 55
	{  shift 156
	(  shift 58
	[  shift 63
	;  shift 168
	.  reduce 25 (src line 234)

	const_def  goto 169
	statements_zero  goto 153
	statement  goto 154
	expr  goto 167

state 116
	initvar:  IDENTIFIER : IDENTIFIER (.arguments_one ) 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 107
	arguments_one  goto 170

state 117
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero.} ; 

	}  shift 171
	.  error


state 118
	module_body_zero:  module_body.module_body_zero 
	module_body_zero: .    (10)

	CONST  shift 10
	PROC  shift 11
	INIT  shift 12
	.  reduce 10 (src line 168)

	const_def  goto 119
	proc_def  goto 120
	init_block  goto 121
	module_body_zero  goto 172
	module_body  goto 118

state 119
	module_body:  const_def.    (12)

	.  reduce 12 (src line 178)


state 120
	module_body:  proc_def.    (13)

	.  reduce 13 (src line 180)


state 121
	module_body:  init_block.    (14)

	.  reduce 14 (src line 181)


state 122
	expr:  expr.ADD expr 
	expr:  expr ADD expr.    (64)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	SHL  shift 89
	SHR  shift 90
	.  reduce 64 (src line 394)


state 123
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (65)
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	SHL  shift 89
	SHR  shift 90
	.  reduce 65 (src line 398)


state 124
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (66)
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 66 (src line 402)


state 125
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr QUO expr.    (67)
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 67 (src line 406)


state 126
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr REM expr.    (68)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 68 (src line 410)


state 127
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (69)
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 69 (src line 414)


state 128
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (70)
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	SHL  shift 89
	SHR  shift 90
	.  reduce 70 (src line 418)


state 129
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr XOR expr.    (71)
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	SHL  shift 89
	SHR  shift 90
	.  reduce 71 (src line 422)


state 130
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr SHL expr.    (72)
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 72 (src line 426)


state 131
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr SHR expr.    (73)
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 73 (src line 430)


state 132
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr LAND expr.    (74)
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	.  reduce 74 (src line 434)


state 133
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr LOR expr.    (75)
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	.  reduce 75 (src line 438)


state 134
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr EQL expr.    (76)
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	.  reduce 76 (src line 442)


state 135
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr LSS expr.    (77)
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	.  reduce 77 (src line 446)


state 136
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr GTR expr.    (78)
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	.  reduce 78 (src line 450)


state 137
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (79)
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	.  reduce 79 (src line 454)


state 138
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr LEQ expr.    (80)
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	.  reduce 80 (src line 458)


state 139
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	expr:  expr GEQ expr.    (81)

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	.  reduce 81 (src line 462)


state 140
	expr:  ( expr ).    (63)

	.  reduce 63 (src line 390)


state 141
	expr:  TIMEOUT_RECV ( arguments_one.) 

	)  shift 173
	.  error


state 142
	expr:  TIMEOUT_PEEK ( arguments_one.) 

	)  shift 174
	.  error


state 143
	expr:  NONBLOCK_RECV ( arguments_one.) 

	)  shift 175
	.  error


state 144
	expr:  NONBLOCK_PEEK ( arguments_one.) 

	)  shift 176
	.  error


state 145
	expr:  [ arguments_one ].    (86)

	.  reduce 86 (src line 482)


state 146
	arguments_one:  expr ,.    (97)
	arguments_one:  expr ,.arguments_one 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  reduce 97 (src line 538)

	expr  goto 107
	arguments_one  goto 177

state 147
	types_one:  type , types_one.    (101)

	.  reduce 101 (src line 556)


state 148
	type:  CHANNEL [ ] { types_one.} 

	}  shift 178
	.  error


state 149
	type:  CHANNEL [ expr ] {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 179
	type  goto 66

state 150
	type:  UNSTABLE CHANNEL { types_one }.    (105)

	.  reduce 105 (src line 573)


state 151
	type:  UNSTABLE CHANNEL [ ] {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 180
	type  goto 66

state 152
	type:  UNSTABLE CHANNEL [ expr ].{ types_one } 

	{  shift 181
	.  error


state 153
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero.} ; 

	}  shift 182
	.  error


state 154
	statements_zero:  statement.statements_zero 
	statements_zero: .    (25)

	IDENTIFIER  shift 155
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	CONST  shift 10
	VAR  shift 157
	IF  shift 158
	CHOICE  shift 159
	RECV  shift 160
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	PEEK  shift 161
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	SEND  shift 162
	FOR  shift 163
	BREAK  shift 164
	GOTO  shift 165
	SKIP  shift 166
	TRUE  shift 54
	FALSE  shift 55
	{  shift 156
	(  shift 58
	[  shift 63
	;  shift 168
	.  reduce 25 (src line 234)

	const_def  goto 169
	statements_zero  goto 183
	statement  goto 154
	expr  goto 167

state 155
	statement:  IDENTIFIER.: statement 
	statement:  IDENTIFIER.ASSIGN expr ; 
	statement:  IDENTIFIER.ADD_ASSIGN expr ; 
	statement:  IDENTIFIER.SUB_ASSIGN expr ; 
	statement:  IDENTIFIER.MUL_ASSIGN expr ; 
	statement:  IDENTIFIER.QUO_ASSIGN expr ; 
	statement:  IDENTIFIER.REM_ASSIGN expr ; 
	statement:  IDENTIFIER.AND_ASSIGN expr ; 
	statement:  IDENTIFIER.OR_ASSIGN expr ; 
	statement:  IDENTIFIER.XOR_ASSIGN expr ; 
	statement:  IDENTIFIER.SHL_ASSIGN expr ; 
	statement:  IDENTIFIER.SHR_ASSIGN expr ; 
	expr:  IDENTIFIER.    (57)

	ADD_ASSIGN  shift 186
	SUB_ASSIGN  shift 187
	MUL_ASSIGN  shift 188
	QUO_ASSIGN  shift 189
	REM_ASSIGN  shift 190
	AND_ASSIGN  shift 191
	OR_ASSIGN  shift 192
	XOR_ASSIGN  shift 193
	SHL_ASSIGN  shift 194
	SHR_ASSIGN  shift 195
	ASSIGN  shift 185
	:  shift 184
	.  reduce 57 (src line 366)


state 156
	statement:  {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 155
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	CONST  shift 10
	VAR  shift 157
	IF  shift 158
	CHOICE  shift 159
	RECV  shift 160
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	PEEK  shift 161
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	SEND  shift 162
	FOR  shift 163
	BREAK  shift 164
	GOTO  shift 165
	SKIP  shift 166
	TRUE  shift 54
	FALSE  shift 55
	{  shift 156
	(  shift 58
	[  shift 63
	;  shift 168
	.  reduce 25 (src line 234)

	const_def  goto 169
	statements_zero  goto 196
	statement  goto 154
	expr  goto 167

state 157
	statement:  VAR.IDENTIFIER type ; 
	statement:  VAR.IDENTIFIER type ASSIGN expr ; 

	IDENTIFIER  shift 197
	.  error


state 158
	statement:  IF.expr { statements_zero } ; 
	statement:  IF.expr { statements_zero } ELSE { statements_zero } ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 198

state 159
	statement:  CHOICE.blocks_one ; 

	{  shift 200
	.  error

	blocks_one  goto 199

state 160
	statement:  RECV.( arguments_one ) ; 

	(  shift 201
	.  error


state 161
	statement:  PEEK.( arguments_one ) ; 

	(  shift 202
	.  error


state 162
	statement:  SEND.( arguments_one ) ; 

	(  shift 203
	.  error


state 163
	statement:  FOR.{ statements_zero } ; 
	statement:  FOR.IDENTIFIER IN expr { statements_zero } ; 
	statement:  FOR.IDENTIFIER IN RANGE expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 205
	{  shift 204
	.  error


state 164
	statement:  BREAK.; 

	;  shift 206
	.  error


state 165
	statement:  GOTO.IDENTIFIER ; 

	IDENTIFIER  shift 207
	.  error


state 166
	statement:  SKIP.; 

	;  shift 208
	.  error


state 167
	statement:  expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 209
	.  error


state 168
	statement:  ;.    (55)

	.  reduce 55 (src line 357)


state 169
	statement:  const_def.    (56)

	.  reduce 56 (src line 361)


state 170
	initvar:  IDENTIFIER : IDENTIFIER ( arguments_one.) 

	)  shift 210
	.  error


state 171
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero }.; 

	;  shift 211
	.  error


state 172
	module_body_zero:  module_body module_body_zero.    (11)

	.  reduce 11 (src line 173)


state 173
	expr:  TIMEOUT_RECV ( arguments_one ).    (82)

	.  reduce 82 (src line 466)


state 174
	expr:  TIMEOUT_PEEK ( arguments_one ).    (83)

	.  reduce 83 (src line 470)


state 175
	expr:  NONBLOCK_RECV ( arguments_one ).    (84)

	.  reduce 84 (src line 474)


state 176
	expr:  NONBLOCK_PEEK ( arguments_one ).    (85)

	.  reduce 85 (src line 478)


state 177
	arguments_one:  expr , arguments_one.    (98)

	.  reduce 98 (src line 542)


state 178
	type:  CHANNEL [ ] { types_one }.    (106)

	.  reduce 106 (src line 577)


state 179
	type:  CHANNEL [ expr ] { types_one.} 

	}  shift 212
	.  error


state 180
	type:  UNSTABLE CHANNEL [ ] { types_one.} 

	}  shift 213
	.  error


state 181
	type:  UNSTABLE CHANNEL [ expr ] {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 214
	type  goto 66

state 182
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero }.; 

	;  shift 215
	.  error


state 183
	statements_zero:  statement statements_zero.    (26)

	.  reduce 26 (src line 239)


state 184
	statement:  IDENTIFIER :.statement 

	IDENTIFIER  shift 155
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	CONST  shift 10
	VAR  shift 157
	IF  shift 158
	CHOICE  shift 159
	RECV  shift 160
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	PEEK  shift 161
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	SEND  shift 162
	FOR  shift 163
	BREAK  shift 164
	GOTO  shift 165
	SKIP  shift 166
	TRUE  shift 54
	FALSE  shift 55
	{  shift 156
	(  shift 58
	[  shift 63
	;  shift 168
	.  error

	const_def  goto 169
	statement  goto 216
	expr  goto 167

state 185
	statement:  IDENTIFIER ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 217

state 186
	statement:  IDENTIFIER ADD_ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 218

state 187
	statement:  IDENTIFIER SUB_ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 219

state 188
	statement:  IDENTIFIER MUL_ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 220

state 189
	statement:  IDENTIFIER QUO_ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 221

state 190
	statement:  IDENTIFIER REM_ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 222

state 191
	statement:  IDENTIFIER AND_ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 223

state 192
	statement:  IDENTIFIER OR_ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 224

state 193
	statement:  IDENTIFIER XOR_ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 225

state 194
	statement:  IDENTIFIER SHL_ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 226

state 195
	statement:  IDENTIFIER SHR_ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 227

state 196
	statement:  { statements_zero.} ; 

	}  shift 228
	.  error


state 197
	statement:  VAR IDENTIFIER.type ; 
	statement:  VAR IDENTIFIER.type ASSIGN expr ; 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	type  goto 229

state 198
	statement:  IF expr.{ statements_zero } ; 
	statement:  IF expr.{ statements_zero } ELSE { statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	{  shift 230
	.  error


state 199
	statement:  CHOICE blocks_one.; 

	;  shift 231
	.  error


state 200
	blocks_one:  {.statements_zero } 
	blocks_one:  {.statements_zero } , 
	blocks_one:  {.statements_zero } , blocks_one 
	statements_zero: .    (25)

	IDENTIFIER  shift 155
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	CONST  shift 10
	VAR  shift 157
	IF  shift 158
	CHOICE  shift 159
	RECV  shift 160
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	PEEK  shift 161
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	SEND  shift 162
	FOR  shift 163
	BREAK  shift 164
	GOTO  shift 165
	SKIP  shift 166
	TRUE  shift 54
	FALSE  shift 55
	{  shift 156
	(  shift 58
	[  shift 63
	;  shift 168
	.  reduce 25 (src line 234)

	const_def  goto 169
	statements_zero  goto 232
	statement  goto 154
	expr  goto 167

state 201
	statement:  RECV (.arguments_one ) ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 107
	arguments_one  goto 233

state 202
	statement:  PEEK (.arguments_one ) ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 107
	arguments_one  goto 234

state 203
	statement:  SEND (.arguments_one ) ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 107
	arguments_one  goto 235

state 204
	statement:  FOR {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 155
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	CONST  shift 10
	VAR  shift 157
	IF  shift 158
	CHOICE  shift 159
	RECV  shift 160
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	PEEK  shift 161
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	SEND  shift 162
	FOR  shift 163
	BREAK  shift 164
	GOTO  shift 165
	SKIP  shift 166
	TRUE  shift 54
	FALSE  shift 55
	{  shift 156
	(  shift 58
	[  shift 63
	;  shift 168
	.  reduce 25 (src line 234)

	const_def  goto 169
	statements_zero  goto 236
	statement  goto 154
	expr  goto 167

state 205
	statement:  FOR IDENTIFIER.IN expr { statements_zero } ; 
	statement:  FOR IDENTIFIER.IN RANGE expr TO expr { statements_zero } ; 

	IN  shift 237
	.  error


state 206
	statement:  BREAK ;.    (51)

	.  reduce 51 (src line 341)


state 207
	statement:  GOTO IDENTIFIER.; 

	;  shift 238
	.  error


state 208
	statement:  SKIP ;.    (53)

	.  reduce 53 (src line 349)


state 209
	statement:  expr ;.    (54)

	.  reduce 54 (src line 353)


state 210
	initvar:  IDENTIFIER : IDENTIFIER ( arguments_one ).    (24)

	.  reduce 24 (src line 229)


state 211
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero } ;.    (9)

	.  reduce 9 (src line 162)


state 212
	type:  CHANNEL [ expr ] { types_one }.    (107)

	.  reduce 107 (src line 581)


state 213
	type:  UNSTABLE CHANNEL [ ] { types_one }.    (108)

	.  reduce 108 (src line 585)


state 214
	type:  UNSTABLE CHANNEL [ expr ] { types_one.} 

	}  shift 239
	.  error


state 215
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero } ;.    (16)

	.  reduce 16 (src line 189)


state 216
	statement:  IDENTIFIER : statement.    (27)

	.  reduce 27 (src line 244)


state 217
	statement:  IDENTIFIER ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 240
	.  error


state 218
	statement:  IDENTIFIER ADD_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 241
	.  error


state 219
	statement:  IDENTIFIER SUB_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 242
	.  error


state 220
	statement:  IDENTIFIER MUL_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 243
	.  error


state 221
	statement:  IDENTIFIER QUO_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 244
	.  error


state 222
	statement:  IDENTIFIER REM_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 245
	.  error


state 223
	statement:  IDENTIFIER AND_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 246
	.  error


state 224
	statement:  IDENTIFIER OR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 247
	.  error


state 225
	statement:  IDENTIFIER XOR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 248
	.  error


state 226
	statement:  IDENTIFIER SHL_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 249
	.  error


state 227
	statement:  IDENTIFIER SHR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 250
	.  error


state 228
	statement:  { statements_zero }.; 

	;  shift 251
	.  error


state 229
	statement:  VAR IDENTIFIER type.; 
	statement:  VAR IDENTIFIER type.ASSIGN expr ; 

	ASSIGN  shift 253
	;  shift 252
	.  error


state 230
	statement:  IF expr {.statements_zero } ; 
	statement:  IF expr {.statements_zero } ELSE { statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 155
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	CONST  shift 10
	VAR  shift 157
	IF  shift 158
	CHOICE  shift 159
	RECV  shift 160
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	PEEK  shift 161
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	SEND  shift 162
	FOR  shift 163
	BREAK  shift 164
	GOTO  shift 165
	SKIP  shift 166
	TRUE  shift 54
	FALSE  shift 55
	{  shift 156
	(  shift 58
	[  shift 63
	;  shift 168
	.  reduce 25 (src line 234)

	const_def  goto 169
	statements_zero  goto 254
	statement  goto 154
	expr  goto 167

state 231
	statement:  CHOICE blocks_one ;.    (44)

	.  reduce 44 (src line 313)


state 232
	blocks_one:  { statements_zero.} 
	blocks_one:  { statements_zero.} , 
	blocks_one:  { statements_zero.} , blocks_one 

	}  shift 255
	.  error


state 233
	statement:  RECV ( arguments_one.) ; 

	)  shift 256
	.  error


state 234
	statement:  PEEK ( arguments_one.) ; 

	)  shift 257
	.  error


state 235
	statement:  SEND ( arguments_one.) ; 

	)  shift 258
	.  error


state 236
	statement:  FOR { statements_zero.} ; 

	}  shift 259
	.  error


state 237
	statement:  FOR IDENTIFIER IN.expr { statements_zero } ; 
	statement:  FOR IDENTIFIER IN.RANGE expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	RANGE  shift 261
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 260

state 238
	statement:  GOTO IDENTIFIER ;.    (52)

	.  reduce 52 (src line 345)


state 239
	type:  UNSTABLE CHANNEL [ expr ] { types_one }.    (109)

	.  reduce 109 (src line 589)


state 240
	statement:  IDENTIFIER ASSIGN expr ;.    (33)

	.  reduce 33 (src line 269)


state 241
	statement:  IDENTIFIER ADD_ASSIGN expr ;.    (34)

	.  reduce 34 (src line 273)


state 242
	statement:  IDENTIFIER SUB_ASSIGN expr ;.    (35)

	.  reduce 35 (src line 277)


state 243
	statement:  IDENTIFIER MUL_ASSIGN expr ;.    (36)

	.  reduce 36 (src line 281)


state 244
	statement:  IDENTIFIER QUO_ASSIGN expr ;.    (37)

	.  reduce 37 (src line 285)


state 245
	statement:  IDENTIFIER REM_ASSIGN expr ;.    (38)

	.  reduce 38 (src line 289)


state 246
	statement:  IDENTIFIER AND_ASSIGN expr ;.    (39)

	.  reduce 39 (src line 293)


state 247
	statement:  IDENTIFIER OR_ASSIGN expr ;.    (40)

	.  reduce 40 (src line 297)


state 248
	statement:  IDENTIFIER XOR_ASSIGN expr ;.    (41)

	.  reduce 41 (src line 301)


state 249
	statement:  IDENTIFIER SHL_ASSIGN expr ;.    (42)

	.  reduce 42 (src line 305)


state 250
	statement:  IDENTIFIER SHR_ASSIGN expr ;.    (43)

	.  reduce 43 (src line 309)


state 251
	statement:  { statements_zero } ;.    (28)

	.  reduce 28 (src line 249)


state 252
	statement:  VAR IDENTIFIER type ;.    (29)

	.  reduce 29 (src line 253)


state 253
	statement:  VAR IDENTIFIER type ASSIGN.expr ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 262

state 254
	statement:  IF expr { statements_zero.} ; 
	statement:  IF expr { statements_zero.} ELSE { statements_zero } ; 

	}  shift 263
	.  error


state 255
	blocks_one:  { statements_zero }.    (110)
	blocks_one:  { statements_zero }., 
	blocks_one:  { statements_zero }., blocks_one 

	,  shift 264
	.  reduce 110 (src line 594)


state 256
	statement:  RECV ( arguments_one ).; 

	;  shift 265
	.  error


state 257
	statement:  PEEK ( arguments_one ).; 

	;  shift 266
	.  error


state 258
	statement:  SEND ( arguments_one ).; 

	;  shift 267
	.  error


state 259
	statement:  FOR { statements_zero }.; 

	;  shift 268
	.  error


state 260
	statement:  FOR IDENTIFIER IN expr.{ statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	{  shift 269
	.  error


state 261
	statement:  FOR IDENTIFIER IN RANGE.expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 270

state 262
	statement:  VAR IDENTIFIER type ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	;  shift 271
	.  error


state 263
	statement:  IF expr { statements_zero }.; 
	statement:  IF expr { statements_zero }.ELSE { statements_zero } ; 

	ELSE  shift 273
	;  shift 272
	.  error


state 264
	blocks_one:  { statements_zero } ,.    (111)
	blocks_one:  { statements_zero } ,.blocks_one 

	{  shift 200
	.  reduce 111 (src line 599)

	blocks_one  goto 274

state 265
	statement:  RECV ( arguments_one ) ;.    (45)

	.  reduce 45 (src line 317)


state 266
	statement:  PEEK ( arguments_one ) ;.    (46)

	.  reduce 46 (src line 321)


state 267
	statement:  SEND ( arguments_one ) ;.    (47)

	.  reduce 47 (src line 325)


state 268
	statement:  FOR { statements_zero } ;.    (48)

	.  reduce 48 (src line 329)


state 269
	statement:  FOR IDENTIFIER IN expr {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 155
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	CONST  shift 10
	VAR  shift 157
	IF  shift 158
	CHOICE  shift 159
	RECV  shift 160
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	PEEK  shift 161
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	SEND  shift 162
	FOR  shift 163
	BREAK  shift 164
	GOTO  shift 165
	SKIP  shift 166
	TRUE  shift 54
	FALSE  shift 55
	{  shift 156
	(  shift 58
	[  shift 63
	;  shift 168
	.  reduce 25 (src line 234)

	const_def  goto 169
	statements_zero  goto 275
	statement  goto 154
	expr  goto 167

state 270
	statement:  FOR IDENTIFIER IN RANGE expr.TO expr { statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	TO  shift 276
	.  error


state 271
	statement:  VAR IDENTIFIER type ASSIGN expr ;.    (30)

	.  reduce 30 (src line 257)


state 272
	statement:  IF expr { statements_zero } ;.    (31)

	.  reduce 31 (src line 261)


state 273
	statement:  IF expr { statements_zero } ELSE.{ statements_zero } ; 

	{  shift 277
	.  error


state 274
	blocks_one:  { statements_zero } , blocks_one.    (112)

	.  reduce 112 (src line 603)


state 275
	statement:  FOR IDENTIFIER IN expr { statements_zero.} ; 

	}  shift 278
	.  error


state 276
	statement:  FOR IDENTIFIER IN RANGE expr TO.expr { statements_zero } ; 

	IDENTIFIER  shift 52
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	TRUE  shift 54
	FALSE  shift 55
	(  shift 58
	[  shift 63
	.  error

	expr  goto 279

state 277
	statement:  IF expr { statements_zero } ELSE {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 155
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	CONST  shift 10
	VAR  shift 157
	IF  shift 158
	CHOICE  shift 159
	RECV  shift 160
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	PEEK  shift 161
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	SEND  shift 162
	FOR  shift 163
	BREAK  shift 164
	GOTO  shift 165
	SKIP  shift 166
	TRUE  shift 54
	FALSE  shift 55
	{  shift 156
	(  shift 58
	[  shift 63
	;  shift 168
	.  reduce 25 (src line 234)

	const_def  goto 169
	statements_zero  goto 280
	statement  goto 154
	expr  goto 167

state 278
	statement:  FOR IDENTIFIER IN expr { statements_zero }.; 

	;  shift 281
	.  error


state 279
	statement:  FOR IDENTIFIER IN RANGE expr TO expr.{ statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 81
	SUB  shift 82
	MUL  shift 83
	QUO  shift 84
	REM  shift 85
	AND  shift 86
	OR  shift 87
	XOR  shift 88
	SHL  shift 89
	SHR  shift 90
	LAND  shift 91
	LOR  shift 92
	EQL  shift 93
	LSS  shift 94
	GTR  shift 95
	NEQ  shift 96
	LEQ  shift 97
	GEQ  shift 98
	{  shift 282
	.  error


state 280
	statement:  IF expr { statements_zero } ELSE { statements_zero.} ; 

	}  shift 283
	.  error


state 281
	statement:  FOR IDENTIFIER IN expr { statements_zero } ;.    (49)

	.  reduce 49 (src line 333)


state 282
	statement:  FOR IDENTIFIER IN RANGE expr TO expr {.statements_zero } ; 
	statements_zero: .    (25)

	IDENTIFIER  shift 155
	NUMBER  shift 53
	SUB  shift 57
	NOT  shift 56
	CONST  shift 10
	VAR  shift 157
	IF  shift 158
	CHOICE  shift 159
	RECV  shift 160
	TIMEOUT_RECV  shift 59
	NONBLOCK_RECV  shift 61
	PEEK  shift 161
	TIMEOUT_PEEK  shift 60
	NONBLOCK_PEEK  shift 62
	SEND  shift 162
	FOR  shift 163
	BREAK  shift 164
	GOTO  shift 165
	SKIP  shift 166
	TRUE  shift 54
	FALSE  shift 55
	{  shift 156
	(  shift 58
	[  shift 63
	;  shift 168
	.  reduce 25 (src line 234)

	const_def  goto 169
	statements_zero  goto 284
	statement  goto 154
	expr  goto 167

state 283
	statement:  IF expr { statements_zero } ELSE { statements_zero }.; 

	;  shift 285
	.  error


state 284
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero.} ; 

	}  shift 286
	.  error


state 285
	statement:  IF expr { statements_zero } ELSE { statements_zero } ;.    (32)

	.  reduce 32 (src line 265)


state 286
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero }.; 

	;  shift 287
	.  error


state 287
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero } ;.    (50)

	.  reduce 50 (src line 337)


73 terminals, 24 nonterminals
113 grammar rules, 288/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
73 working sets used
memory: parser 160/30000
119 extra closures
1562 shift entries, 1 exceptions
117 goto entries
42 entries saved by goto default
Optimizer space used: output 913/30000
913 table entries, 132 zero
maximum spread: 72, maximum offset: 282
