
state 0
	$accept: .spec $end 

	DATA  shift 8
	CONST  shift 10
	MODULE  shift 9
	PROC  shift 11
	INIT  shift 12
	.  error

	spec  goto 1
	toplevel_body  goto 2
	data_def  goto 3
	module_def  goto 4
	const_def  goto 5
	proc_def  goto 6
	init_block  goto 7

state 1
	$accept:  spec.$end 

	$end  accept
	.  error


state 2
	spec:  toplevel_body.    (1)
	spec:  toplevel_body.spec 

	DATA  shift 8
	CONST  shift 10
	MODULE  shift 9
	PROC  shift 11
	INIT  shift 12
	.  reduce 1 (src line 125)

	spec  goto 13
	toplevel_body  goto 2
	data_def  goto 3
	module_def  goto 4
	const_def  goto 5
	proc_def  goto 6
	init_block  goto 7

state 3
	toplevel_body:  data_def.    (3)

	.  reduce 3 (src line 140)


state 4
	toplevel_body:  module_def.    (4)

	.  reduce 4 (src line 142)


state 5
	toplevel_body:  const_def.    (5)

	.  reduce 5 (src line 143)


state 6
	toplevel_body:  proc_def.    (6)

	.  reduce 6 (src line 144)


state 7
	toplevel_body:  init_block.    (7)

	.  reduce 7 (src line 145)


state 8
	data_def:  DATA.IDENTIFIER { idents_one } ; 

	IDENTIFIER  shift 14
	.  error


state 9
	module_def:  MODULE.IDENTIFIER ( parameters_zero ) { module_body_zero } ; 

	IDENTIFIER  shift 15
	.  error


state 10
	const_def:  CONST.IDENTIFIER ASSIGN expr ; 

	IDENTIFIER  shift 16
	.  error


state 11
	proc_def:  PROC.IDENTIFIER ( parameters_zero ) { statements_zero } ; 

	IDENTIFIER  shift 17
	.  error


state 12
	init_block:  INIT.{ statements_zero } ; 

	{  shift 18
	.  error


state 13
	spec:  toplevel_body spec.    (2)

	.  reduce 2 (src line 132)


state 14
	data_def:  DATA IDENTIFIER.{ idents_one } ; 

	{  shift 19
	.  error


state 15
	module_def:  MODULE IDENTIFIER.( parameters_zero ) { module_body_zero } ; 

	(  shift 20
	.  error


state 16
	const_def:  CONST IDENTIFIER.ASSIGN expr ; 

	ASSIGN  shift 21
	.  error


state 17
	proc_def:  PROC IDENTIFIER.( parameters_zero ) { statements_zero } ; 

	(  shift 22
	.  error


state 18
	init_block:  INIT {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 25
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	CONST  shift 10
	VAR  shift 27
	IF  shift 28
	CHOICE  shift 29
	RECV  shift 30
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	PEEK  shift 31
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	SEND  shift 32
	FOR  shift 33
	BREAK  shift 34
	GOTO  shift 35
	SKIP  shift 36
	{  shift 26
	;  shift 38
	(  shift 43
	[  shift 48
	.  reduce 18 (src line 192)

	const_def  goto 39
	statements_zero  goto 23
	statement  goto 24
	expr  goto 37

state 19
	data_def:  DATA IDENTIFIER {.idents_one } ; 

	IDENTIFIER  shift 50
	.  error

	idents_one  goto 49

state 20
	module_def:  MODULE IDENTIFIER (.parameters_zero ) { module_body_zero } ; 
	parameters_zero: .    (82)

	IDENTIFIER  shift 54
	.  reduce 82 (src line 457)

	parameters_zero  goto 51
	parameters_one  goto 52
	parameter  goto 53

state 21
	const_def:  CONST IDENTIFIER ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 55

state 22
	proc_def:  PROC IDENTIFIER (.parameters_zero ) { statements_zero } ; 
	parameters_zero: .    (82)

	IDENTIFIER  shift 54
	.  reduce 82 (src line 457)

	parameters_zero  goto 57
	parameters_one  goto 52
	parameter  goto 53

state 23
	init_block:  INIT { statements_zero.} ; 

	}  shift 58
	.  error


state 24
	statements_zero:  statement.statements_zero 
	statements_zero: .    (18)

	IDENTIFIER  shift 25
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	CONST  shift 10
	VAR  shift 27
	IF  shift 28
	CHOICE  shift 29
	RECV  shift 30
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	PEEK  shift 31
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	SEND  shift 32
	FOR  shift 33
	BREAK  shift 34
	GOTO  shift 35
	SKIP  shift 36
	{  shift 26
	;  shift 38
	(  shift 43
	[  shift 48
	.  reduce 18 (src line 192)

	const_def  goto 39
	statements_zero  goto 59
	statement  goto 24
	expr  goto 37

state 25
	statement:  IDENTIFIER.: statement 
	statement:  IDENTIFIER.ASSIGN expr ; 
	statement:  IDENTIFIER.ADD_ASSIGN expr ; 
	statement:  IDENTIFIER.SUB_ASSIGN expr ; 
	statement:  IDENTIFIER.MUL_ASSIGN expr ; 
	statement:  IDENTIFIER.QUO_ASSIGN expr ; 
	statement:  IDENTIFIER.REM_ASSIGN expr ; 
	statement:  IDENTIFIER.AND_ASSIGN expr ; 
	statement:  IDENTIFIER.OR_ASSIGN expr ; 
	statement:  IDENTIFIER.XOR_ASSIGN expr ; 
	statement:  IDENTIFIER.SHL_ASSIGN expr ; 
	statement:  IDENTIFIER.SHR_ASSIGN expr ; 
	statement:  IDENTIFIER.( arguments_one ) ; 
	expr:  IDENTIFIER.    (51)

	ADD_ASSIGN  shift 62
	SUB_ASSIGN  shift 63
	MUL_ASSIGN  shift 64
	QUO_ASSIGN  shift 65
	REM_ASSIGN  shift 66
	AND_ASSIGN  shift 67
	OR_ASSIGN  shift 68
	XOR_ASSIGN  shift 69
	SHL_ASSIGN  shift 70
	SHR_ASSIGN  shift 71
	ASSIGN  shift 61
	(  shift 72
	:  shift 60
	.  reduce 51 (src line 328)


state 26
	statement:  {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 25
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	CONST  shift 10
	VAR  shift 27
	IF  shift 28
	CHOICE  shift 29
	RECV  shift 30
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	PEEK  shift 31
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	SEND  shift 32
	FOR  shift 33
	BREAK  shift 34
	GOTO  shift 35
	SKIP  shift 36
	{  shift 26
	;  shift 38
	(  shift 43
	[  shift 48
	.  reduce 18 (src line 192)

	const_def  goto 39
	statements_zero  goto 73
	statement  goto 24
	expr  goto 37

state 27
	statement:  VAR.IDENTIFIER type ; 
	statement:  VAR.IDENTIFIER type ASSIGN expr ; 

	IDENTIFIER  shift 74
	.  error


state 28
	statement:  IF.expr { statements_zero } ; 
	statement:  IF.expr { statements_zero } ELSE { statements_zero } ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 75

state 29
	statement:  CHOICE.blocks_one ; 

	{  shift 77
	.  error

	blocks_one  goto 76

state 30
	statement:  RECV.( arguments_one ) ; 

	(  shift 78
	.  error


state 31
	statement:  PEEK.( arguments_one ) ; 

	(  shift 79
	.  error


state 32
	statement:  SEND.( arguments_one ) ; 

	(  shift 80
	.  error


state 33
	statement:  FOR.{ statements_zero } ; 
	statement:  FOR.IDENTIFIER IN expr { statements_zero } ; 
	statement:  FOR.IDENTIFIER IN RANGE expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 82
	{  shift 81
	.  error


state 34
	statement:  BREAK.; 

	;  shift 83
	.  error


state 35
	statement:  GOTO.IDENTIFIER ; 

	IDENTIFIER  shift 84
	.  error


state 36
	statement:  SKIP.; 

	;  shift 85
	.  error


state 37
	statement:  expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 86
	.  error


state 38
	statement:  ;.    (49)

	.  reduce 49 (src line 319)


state 39
	statement:  const_def.    (50)

	.  reduce 50 (src line 323)


state 40
	expr:  NUMBER.    (52)

	.  reduce 52 (src line 332)


state 41
	expr:  NOT.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 105

state 42
	expr:  SUB.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 106

state 43
	expr:  (.expr ) 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 107

state 44
	expr:  TIMEOUT_RECV.( arguments_one ) 

	(  shift 108
	.  error


state 45
	expr:  TIMEOUT_PEEK.( arguments_one ) 

	(  shift 109
	.  error


state 46
	expr:  NONBLOCK_RECV.( arguments_one ) 

	(  shift 110
	.  error


state 47
	expr:  NONBLOCK_PEEK.( arguments_one ) 

	(  shift 111
	.  error


state 48
	expr:  [.arguments_zero ] 
	arguments_zero: .    (88)

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  reduce 88 (src line 487)

	expr  goto 114
	arguments_zero  goto 112
	arguments_one  goto 113

state 49
	data_def:  DATA IDENTIFIER { idents_one.} ; 

	}  shift 115
	.  error


state 50
	idents_one:  IDENTIFIER.    (79)
	idents_one:  IDENTIFIER., 
	idents_one:  IDENTIFIER., idents_one 

	,  shift 116
	.  reduce 79 (src line 443)


state 51
	module_def:  MODULE IDENTIFIER ( parameters_zero.) { module_body_zero } ; 

	)  shift 117
	.  error


state 52
	parameters_zero:  parameters_one.    (83)

	.  reduce 83 (src line 462)


state 53
	parameters_one:  parameter.    (84)
	parameters_one:  parameter., 
	parameters_one:  parameter., parameters_one 

	,  shift 118
	.  reduce 84 (src line 467)


state 54
	parameter:  IDENTIFIER.type 

	IDENTIFIER  shift 120
	CHANNEL  shift 122
	UNSTABLE  shift 123
	[  shift 121
	.  error

	type  goto 119

state 55
	const_def:  CONST IDENTIFIER ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 124
	.  error


state 56
	expr:  IDENTIFIER.    (51)

	.  reduce 51 (src line 328)


state 57
	proc_def:  PROC IDENTIFIER ( parameters_zero.) { statements_zero } ; 

	)  shift 125
	.  error


state 58
	init_block:  INIT { statements_zero }.; 

	;  shift 126
	.  error


state 59
	statements_zero:  statement statements_zero.    (19)

	.  reduce 19 (src line 197)


state 60
	statement:  IDENTIFIER :.statement 

	IDENTIFIER  shift 25
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	CONST  shift 10
	VAR  shift 27
	IF  shift 28
	CHOICE  shift 29
	RECV  shift 30
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	PEEK  shift 31
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	SEND  shift 32
	FOR  shift 33
	BREAK  shift 34
	GOTO  shift 35
	SKIP  shift 36
	{  shift 26
	;  shift 38
	(  shift 43
	[  shift 48
	.  error

	const_def  goto 39
	statement  goto 127
	expr  goto 37

state 61
	statement:  IDENTIFIER ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 128

state 62
	statement:  IDENTIFIER ADD_ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 129

state 63
	statement:  IDENTIFIER SUB_ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 130

state 64
	statement:  IDENTIFIER MUL_ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 131

state 65
	statement:  IDENTIFIER QUO_ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 132

state 66
	statement:  IDENTIFIER REM_ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 133

state 67
	statement:  IDENTIFIER AND_ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 134

state 68
	statement:  IDENTIFIER OR_ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 135

state 69
	statement:  IDENTIFIER XOR_ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 136

state 70
	statement:  IDENTIFIER SHL_ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 137

state 71
	statement:  IDENTIFIER SHR_ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 138

state 72
	statement:  IDENTIFIER (.arguments_one ) ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 114
	arguments_one  goto 139

state 73
	statement:  { statements_zero.} ; 

	}  shift 140
	.  error


state 74
	statement:  VAR IDENTIFIER.type ; 
	statement:  VAR IDENTIFIER.type ASSIGN expr ; 

	IDENTIFIER  shift 120
	CHANNEL  shift 122
	UNSTABLE  shift 123
	[  shift 121
	.  error

	type  goto 141

state 75
	statement:  IF expr.{ statements_zero } ; 
	statement:  IF expr.{ statements_zero } ELSE { statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	{  shift 142
	.  error


state 76
	statement:  CHOICE blocks_one.; 

	;  shift 143
	.  error


state 77
	blocks_one:  {.statements_zero } 
	blocks_one:  {.statements_zero } , 
	blocks_one:  {.statements_zero } , blocks_one 
	statements_zero: .    (18)

	IDENTIFIER  shift 25
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	CONST  shift 10
	VAR  shift 27
	IF  shift 28
	CHOICE  shift 29
	RECV  shift 30
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	PEEK  shift 31
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	SEND  shift 32
	FOR  shift 33
	BREAK  shift 34
	GOTO  shift 35
	SKIP  shift 36
	{  shift 26
	;  shift 38
	(  shift 43
	[  shift 48
	.  reduce 18 (src line 192)

	const_def  goto 39
	statements_zero  goto 144
	statement  goto 24
	expr  goto 37

state 78
	statement:  RECV (.arguments_one ) ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 114
	arguments_one  goto 145

state 79
	statement:  PEEK (.arguments_one ) ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 114
	arguments_one  goto 146

state 80
	statement:  SEND (.arguments_one ) ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 114
	arguments_one  goto 147

state 81
	statement:  FOR {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 25
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	CONST  shift 10
	VAR  shift 27
	IF  shift 28
	CHOICE  shift 29
	RECV  shift 30
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	PEEK  shift 31
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	SEND  shift 32
	FOR  shift 33
	BREAK  shift 34
	GOTO  shift 35
	SKIP  shift 36
	{  shift 26
	;  shift 38
	(  shift 43
	[  shift 48
	.  reduce 18 (src line 192)

	const_def  goto 39
	statements_zero  goto 148
	statement  goto 24
	expr  goto 37

state 82
	statement:  FOR IDENTIFIER.IN expr { statements_zero } ; 
	statement:  FOR IDENTIFIER.IN RANGE expr TO expr { statements_zero } ; 

	IN  shift 149
	.  error


state 83
	statement:  BREAK ;.    (44)

	.  reduce 44 (src line 299)


state 84
	statement:  GOTO IDENTIFIER.; 

	;  shift 150
	.  error


state 85
	statement:  SKIP ;.    (47)

	.  reduce 47 (src line 311)


state 86
	statement:  expr ;.    (48)

	.  reduce 48 (src line 315)


state 87
	expr:  expr ADD.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 151

state 88
	expr:  expr SUB.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 152

state 89
	expr:  expr MUL.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 153

state 90
	expr:  expr QUO.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 154

state 91
	expr:  expr REM.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 155

state 92
	expr:  expr AND.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 156

state 93
	expr:  expr OR.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 157

state 94
	expr:  expr XOR.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 158

state 95
	expr:  expr SHL.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 159

state 96
	expr:  expr SHR.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 160

state 97
	expr:  expr LAND.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 161

state 98
	expr:  expr LOR.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 162

state 99
	expr:  expr EQL.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 163

state 100
	expr:  expr LSS.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 164

state 101
	expr:  expr GTR.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 165

state 102
	expr:  expr NEQ.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 166

state 103
	expr:  expr LEQ.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 167

state 104
	expr:  expr GEQ.expr 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 168

state 105
	expr:  NOT expr.    (53)
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 53 (src line 336)


state 106
	expr:  SUB expr.    (54)
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 54 (src line 340)


state 107
	expr:  ( expr.) 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	)  shift 169
	.  error


state 108
	expr:  TIMEOUT_RECV (.arguments_one ) 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 114
	arguments_one  goto 170

state 109
	expr:  TIMEOUT_PEEK (.arguments_one ) 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 114
	arguments_one  goto 171

state 110
	expr:  NONBLOCK_RECV (.arguments_one ) 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 114
	arguments_one  goto 172

state 111
	expr:  NONBLOCK_PEEK (.arguments_one ) 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 114
	arguments_one  goto 173

state 112
	expr:  [ arguments_zero.] 

	]  shift 174
	.  error


state 113
	arguments_zero:  arguments_one.    (89)

	.  reduce 89 (src line 492)


state 114
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	arguments_one:  expr.    (90)
	arguments_one:  expr., 
	arguments_one:  expr., arguments_one 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	,  shift 175
	.  reduce 90 (src line 497)


state 115
	data_def:  DATA IDENTIFIER { idents_one }.; 

	;  shift 176
	.  error


state 116
	idents_one:  IDENTIFIER ,.    (80)
	idents_one:  IDENTIFIER ,.idents_one 

	IDENTIFIER  shift 50
	.  reduce 80 (src line 448)

	idents_one  goto 177

state 117
	module_def:  MODULE IDENTIFIER ( parameters_zero ).{ module_body_zero } ; 

	{  shift 178
	.  error


state 118
	parameters_one:  parameter ,.    (85)
	parameters_one:  parameter ,.parameters_one 

	IDENTIFIER  shift 54
	.  reduce 85 (src line 472)

	parameters_one  goto 179
	parameter  goto 53

state 119
	parameter:  IDENTIFIER type.    (87)

	.  reduce 87 (src line 481)


state 120
	type:  IDENTIFIER.    (96)

	.  reduce 96 (src line 525)


state 121
	type:  [.] type 

	]  shift 180
	.  error


state 122
	type:  CHANNEL.[ ] { types_one } 
	type:  CHANNEL.[ expr ] { types_one } 

	[  shift 181
	.  error


state 123
	type:  UNSTABLE.CHANNEL [ ] { types_one } 
	type:  UNSTABLE.CHANNEL [ expr ] { types_one } 

	CHANNEL  shift 182
	.  error


state 124
	const_def:  CONST IDENTIFIER ASSIGN expr ;.    (15)

	.  reduce 15 (src line 174)


state 125
	proc_def:  PROC IDENTIFIER ( parameters_zero ).{ statements_zero } ; 

	{  shift 183
	.  error


state 126
	init_block:  INIT { statements_zero } ;.    (17)

	.  reduce 17 (src line 186)


state 127
	statement:  IDENTIFIER : statement.    (20)

	.  reduce 20 (src line 202)


state 128
	statement:  IDENTIFIER ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 184
	.  error


state 129
	statement:  IDENTIFIER ADD_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 185
	.  error


state 130
	statement:  IDENTIFIER SUB_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 186
	.  error


state 131
	statement:  IDENTIFIER MUL_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 187
	.  error


state 132
	statement:  IDENTIFIER QUO_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 188
	.  error


state 133
	statement:  IDENTIFIER REM_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 189
	.  error


state 134
	statement:  IDENTIFIER AND_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 190
	.  error


state 135
	statement:  IDENTIFIER OR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 191
	.  error


state 136
	statement:  IDENTIFIER XOR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 192
	.  error


state 137
	statement:  IDENTIFIER SHL_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 193
	.  error


state 138
	statement:  IDENTIFIER SHR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 194
	.  error


state 139
	statement:  IDENTIFIER ( arguments_one.) ; 

	)  shift 195
	.  error


state 140
	statement:  { statements_zero }.; 

	;  shift 196
	.  error


state 141
	statement:  VAR IDENTIFIER type.; 
	statement:  VAR IDENTIFIER type.ASSIGN expr ; 

	ASSIGN  shift 198
	;  shift 197
	.  error


state 142
	statement:  IF expr {.statements_zero } ; 
	statement:  IF expr {.statements_zero } ELSE { statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 25
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	CONST  shift 10
	VAR  shift 27
	IF  shift 28
	CHOICE  shift 29
	RECV  shift 30
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	PEEK  shift 31
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	SEND  shift 32
	FOR  shift 33
	BREAK  shift 34
	GOTO  shift 35
	SKIP  shift 36
	{  shift 26
	;  shift 38
	(  shift 43
	[  shift 48
	.  reduce 18 (src line 192)

	const_def  goto 39
	statements_zero  goto 199
	statement  goto 24
	expr  goto 37

state 143
	statement:  CHOICE blocks_one ;.    (37)

	.  reduce 37 (src line 271)


state 144
	blocks_one:  { statements_zero.} 
	blocks_one:  { statements_zero.} , 
	blocks_one:  { statements_zero.} , blocks_one 

	}  shift 200
	.  error


state 145
	statement:  RECV ( arguments_one.) ; 

	)  shift 201
	.  error


state 146
	statement:  PEEK ( arguments_one.) ; 

	)  shift 202
	.  error


state 147
	statement:  SEND ( arguments_one.) ; 

	)  shift 203
	.  error


state 148
	statement:  FOR { statements_zero.} ; 

	}  shift 204
	.  error


state 149
	statement:  FOR IDENTIFIER IN.expr { statements_zero } ; 
	statement:  FOR IDENTIFIER IN.RANGE expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	RANGE  shift 206
	(  shift 43
	[  shift 48
	.  error

	expr  goto 205

state 150
	statement:  GOTO IDENTIFIER ;.    (45)

	.  reduce 45 (src line 303)


state 151
	expr:  expr.ADD expr 
	expr:  expr ADD expr.    (56)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	SHL  shift 95
	SHR  shift 96
	.  reduce 56 (src line 348)


state 152
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (57)
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	SHL  shift 95
	SHR  shift 96
	.  reduce 57 (src line 352)


state 153
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (58)
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 58 (src line 356)


state 154
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr QUO expr.    (59)
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 59 (src line 360)


state 155
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr REM expr.    (60)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 60 (src line 364)


state 156
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (61)
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 61 (src line 368)


state 157
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (62)
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	SHL  shift 95
	SHR  shift 96
	.  reduce 62 (src line 372)


state 158
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr XOR expr.    (63)
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	SHL  shift 95
	SHR  shift 96
	.  reduce 63 (src line 376)


state 159
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr SHL expr.    (64)
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 64 (src line 380)


state 160
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr SHR expr.    (65)
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 65 (src line 384)


state 161
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr LAND expr.    (66)
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	.  reduce 66 (src line 388)


state 162
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr LOR expr.    (67)
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	.  reduce 67 (src line 392)


state 163
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr EQL expr.    (68)
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	.  reduce 68 (src line 396)


state 164
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr LSS expr.    (69)
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	.  reduce 69 (src line 400)


state 165
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr GTR expr.    (70)
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	.  reduce 70 (src line 404)


state 166
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (71)
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	.  reduce 71 (src line 408)


state 167
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr LEQ expr.    (72)
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	.  reduce 72 (src line 412)


state 168
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	expr:  expr GEQ expr.    (73)

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	.  reduce 73 (src line 416)


state 169
	expr:  ( expr ).    (55)

	.  reduce 55 (src line 344)


state 170
	expr:  TIMEOUT_RECV ( arguments_one.) 

	)  shift 207
	.  error


state 171
	expr:  TIMEOUT_PEEK ( arguments_one.) 

	)  shift 208
	.  error


state 172
	expr:  NONBLOCK_RECV ( arguments_one.) 

	)  shift 209
	.  error


state 173
	expr:  NONBLOCK_PEEK ( arguments_one.) 

	)  shift 210
	.  error


state 174
	expr:  [ arguments_zero ].    (78)

	.  reduce 78 (src line 436)


state 175
	arguments_one:  expr ,.    (91)
	arguments_one:  expr ,.arguments_one 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  reduce 91 (src line 502)

	expr  goto 114
	arguments_one  goto 211

state 176
	data_def:  DATA IDENTIFIER { idents_one } ;.    (8)

	.  reduce 8 (src line 147)


state 177
	idents_one:  IDENTIFIER , idents_one.    (81)

	.  reduce 81 (src line 452)


state 178
	module_def:  MODULE IDENTIFIER ( parameters_zero ) {.module_body_zero } ; 
	module_body_zero: .    (10)

	CONST  shift 10
	PROC  shift 11
	INIT  shift 12
	.  reduce 10 (src line 159)

	const_def  goto 214
	proc_def  goto 215
	init_block  goto 216
	module_body_zero  goto 212
	module_body  goto 213

state 179
	parameters_one:  parameter , parameters_one.    (86)

	.  reduce 86 (src line 476)


state 180
	type:  [ ].type 

	IDENTIFIER  shift 120
	CHANNEL  shift 122
	UNSTABLE  shift 123
	[  shift 121
	.  error

	type  goto 217

state 181
	type:  CHANNEL [.] { types_one } 
	type:  CHANNEL [.expr ] { types_one } 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	]  shift 218
	.  error

	expr  goto 219

state 182
	type:  UNSTABLE CHANNEL.[ ] { types_one } 
	type:  UNSTABLE CHANNEL.[ expr ] { types_one } 

	[  shift 220
	.  error


state 183
	proc_def:  PROC IDENTIFIER ( parameters_zero ) {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 25
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	CONST  shift 10
	VAR  shift 27
	IF  shift 28
	CHOICE  shift 29
	RECV  shift 30
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	PEEK  shift 31
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	SEND  shift 32
	FOR  shift 33
	BREAK  shift 34
	GOTO  shift 35
	SKIP  shift 36
	{  shift 26
	;  shift 38
	(  shift 43
	[  shift 48
	.  reduce 18 (src line 192)

	const_def  goto 39
	statements_zero  goto 221
	statement  goto 24
	expr  goto 37

state 184
	statement:  IDENTIFIER ASSIGN expr ;.    (26)

	.  reduce 26 (src line 227)


state 185
	statement:  IDENTIFIER ADD_ASSIGN expr ;.    (27)

	.  reduce 27 (src line 231)


state 186
	statement:  IDENTIFIER SUB_ASSIGN expr ;.    (28)

	.  reduce 28 (src line 235)


state 187
	statement:  IDENTIFIER MUL_ASSIGN expr ;.    (29)

	.  reduce 29 (src line 239)


state 188
	statement:  IDENTIFIER QUO_ASSIGN expr ;.    (30)

	.  reduce 30 (src line 243)


state 189
	statement:  IDENTIFIER REM_ASSIGN expr ;.    (31)

	.  reduce 31 (src line 247)


state 190
	statement:  IDENTIFIER AND_ASSIGN expr ;.    (32)

	.  reduce 32 (src line 251)


state 191
	statement:  IDENTIFIER OR_ASSIGN expr ;.    (33)

	.  reduce 33 (src line 255)


state 192
	statement:  IDENTIFIER XOR_ASSIGN expr ;.    (34)

	.  reduce 34 (src line 259)


state 193
	statement:  IDENTIFIER SHL_ASSIGN expr ;.    (35)

	.  reduce 35 (src line 263)


state 194
	statement:  IDENTIFIER SHR_ASSIGN expr ;.    (36)

	.  reduce 36 (src line 267)


state 195
	statement:  IDENTIFIER ( arguments_one ).; 

	;  shift 222
	.  error


state 196
	statement:  { statements_zero } ;.    (21)

	.  reduce 21 (src line 207)


state 197
	statement:  VAR IDENTIFIER type ;.    (22)

	.  reduce 22 (src line 211)


state 198
	statement:  VAR IDENTIFIER type ASSIGN.expr ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 223

state 199
	statement:  IF expr { statements_zero.} ; 
	statement:  IF expr { statements_zero.} ELSE { statements_zero } ; 

	}  shift 224
	.  error


state 200
	blocks_one:  { statements_zero }.    (102)
	blocks_one:  { statements_zero }., 
	blocks_one:  { statements_zero }., blocks_one 

	,  shift 225
	.  reduce 102 (src line 550)


state 201
	statement:  RECV ( arguments_one ).; 

	;  shift 226
	.  error


state 202
	statement:  PEEK ( arguments_one ).; 

	;  shift 227
	.  error


state 203
	statement:  SEND ( arguments_one ).; 

	;  shift 228
	.  error


state 204
	statement:  FOR { statements_zero }.; 

	;  shift 229
	.  error


state 205
	statement:  FOR IDENTIFIER IN expr.{ statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	{  shift 230
	.  error


state 206
	statement:  FOR IDENTIFIER IN RANGE.expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 231

state 207
	expr:  TIMEOUT_RECV ( arguments_one ).    (74)

	.  reduce 74 (src line 420)


state 208
	expr:  TIMEOUT_PEEK ( arguments_one ).    (75)

	.  reduce 75 (src line 424)


state 209
	expr:  NONBLOCK_RECV ( arguments_one ).    (76)

	.  reduce 76 (src line 428)


state 210
	expr:  NONBLOCK_PEEK ( arguments_one ).    (77)

	.  reduce 77 (src line 432)


state 211
	arguments_one:  expr , arguments_one.    (92)

	.  reduce 92 (src line 506)


state 212
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero.} ; 

	}  shift 232
	.  error


state 213
	module_body_zero:  module_body.module_body_zero 
	module_body_zero: .    (10)

	CONST  shift 10
	PROC  shift 11
	INIT  shift 12
	.  reduce 10 (src line 159)

	const_def  goto 214
	proc_def  goto 215
	init_block  goto 216
	module_body_zero  goto 233
	module_body  goto 213

state 214
	module_body:  const_def.    (12)

	.  reduce 12 (src line 169)


state 215
	module_body:  proc_def.    (13)

	.  reduce 13 (src line 171)


state 216
	module_body:  init_block.    (14)

	.  reduce 14 (src line 172)


state 217
	type:  [ ] type.    (97)

	.  reduce 97 (src line 529)


state 218
	type:  CHANNEL [ ].{ types_one } 

	{  shift 234
	.  error


state 219
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	type:  CHANNEL [ expr.] { types_one } 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	]  shift 235
	.  error


state 220
	type:  UNSTABLE CHANNEL [.] { types_one } 
	type:  UNSTABLE CHANNEL [.expr ] { types_one } 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	]  shift 236
	.  error

	expr  goto 237

state 221
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero.} ; 

	}  shift 238
	.  error


state 222
	statement:  IDENTIFIER ( arguments_one ) ;.    (46)

	.  reduce 46 (src line 307)


state 223
	statement:  VAR IDENTIFIER type ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	;  shift 239
	.  error


state 224
	statement:  IF expr { statements_zero }.; 
	statement:  IF expr { statements_zero }.ELSE { statements_zero } ; 

	ELSE  shift 241
	;  shift 240
	.  error


state 225
	blocks_one:  { statements_zero } ,.    (103)
	blocks_one:  { statements_zero } ,.blocks_one 

	{  shift 77
	.  reduce 103 (src line 555)

	blocks_one  goto 242

state 226
	statement:  RECV ( arguments_one ) ;.    (38)

	.  reduce 38 (src line 275)


state 227
	statement:  PEEK ( arguments_one ) ;.    (39)

	.  reduce 39 (src line 279)


state 228
	statement:  SEND ( arguments_one ) ;.    (40)

	.  reduce 40 (src line 283)


state 229
	statement:  FOR { statements_zero } ;.    (41)

	.  reduce 41 (src line 287)


state 230
	statement:  FOR IDENTIFIER IN expr {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 25
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	CONST  shift 10
	VAR  shift 27
	IF  shift 28
	CHOICE  shift 29
	RECV  shift 30
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	PEEK  shift 31
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	SEND  shift 32
	FOR  shift 33
	BREAK  shift 34
	GOTO  shift 35
	SKIP  shift 36
	{  shift 26
	;  shift 38
	(  shift 43
	[  shift 48
	.  reduce 18 (src line 192)

	const_def  goto 39
	statements_zero  goto 243
	statement  goto 24
	expr  goto 37

state 231
	statement:  FOR IDENTIFIER IN RANGE expr.TO expr { statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	TO  shift 244
	.  error


state 232
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero }.; 

	;  shift 245
	.  error


state 233
	module_body_zero:  module_body module_body_zero.    (11)

	.  reduce 11 (src line 164)


state 234
	type:  CHANNEL [ ] {.types_one } 

	IDENTIFIER  shift 120
	CHANNEL  shift 122
	UNSTABLE  shift 123
	[  shift 121
	.  error

	types_one  goto 246
	type  goto 247

state 235
	type:  CHANNEL [ expr ].{ types_one } 

	{  shift 248
	.  error


state 236
	type:  UNSTABLE CHANNEL [ ].{ types_one } 

	{  shift 249
	.  error


state 237
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	type:  UNSTABLE CHANNEL [ expr.] { types_one } 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	]  shift 250
	.  error


state 238
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero }.; 

	;  shift 251
	.  error


state 239
	statement:  VAR IDENTIFIER type ASSIGN expr ;.    (23)

	.  reduce 23 (src line 215)


state 240
	statement:  IF expr { statements_zero } ;.    (24)

	.  reduce 24 (src line 219)


state 241
	statement:  IF expr { statements_zero } ELSE.{ statements_zero } ; 

	{  shift 252
	.  error


state 242
	blocks_one:  { statements_zero } , blocks_one.    (104)

	.  reduce 104 (src line 559)


state 243
	statement:  FOR IDENTIFIER IN expr { statements_zero.} ; 

	}  shift 253
	.  error


state 244
	statement:  FOR IDENTIFIER IN RANGE expr TO.expr { statements_zero } ; 

	IDENTIFIER  shift 56
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	(  shift 43
	[  shift 48
	.  error

	expr  goto 254

state 245
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero } ;.    (9)

	.  reduce 9 (src line 153)


state 246
	type:  CHANNEL [ ] { types_one.} 

	}  shift 255
	.  error


state 247
	types_one:  type.    (93)
	types_one:  type., 
	types_one:  type., types_one 

	,  shift 256
	.  reduce 93 (src line 511)


state 248
	type:  CHANNEL [ expr ] {.types_one } 

	IDENTIFIER  shift 120
	CHANNEL  shift 122
	UNSTABLE  shift 123
	[  shift 121
	.  error

	types_one  goto 257
	type  goto 247

state 249
	type:  UNSTABLE CHANNEL [ ] {.types_one } 

	IDENTIFIER  shift 120
	CHANNEL  shift 122
	UNSTABLE  shift 123
	[  shift 121
	.  error

	types_one  goto 258
	type  goto 247

state 250
	type:  UNSTABLE CHANNEL [ expr ].{ types_one } 

	{  shift 259
	.  error


state 251
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero } ;.    (16)

	.  reduce 16 (src line 180)


state 252
	statement:  IF expr { statements_zero } ELSE {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 25
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	CONST  shift 10
	VAR  shift 27
	IF  shift 28
	CHOICE  shift 29
	RECV  shift 30
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	PEEK  shift 31
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	SEND  shift 32
	FOR  shift 33
	BREAK  shift 34
	GOTO  shift 35
	SKIP  shift 36
	{  shift 26
	;  shift 38
	(  shift 43
	[  shift 48
	.  reduce 18 (src line 192)

	const_def  goto 39
	statements_zero  goto 260
	statement  goto 24
	expr  goto 37

state 253
	statement:  FOR IDENTIFIER IN expr { statements_zero }.; 

	;  shift 261
	.  error


state 254
	statement:  FOR IDENTIFIER IN RANGE expr TO expr.{ statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 87
	SUB  shift 88
	MUL  shift 89
	QUO  shift 90
	REM  shift 91
	AND  shift 92
	OR  shift 93
	XOR  shift 94
	SHL  shift 95
	SHR  shift 96
	LAND  shift 97
	LOR  shift 98
	EQL  shift 99
	LSS  shift 100
	GTR  shift 101
	NEQ  shift 102
	LEQ  shift 103
	GEQ  shift 104
	{  shift 262
	.  error


state 255
	type:  CHANNEL [ ] { types_one }.    (98)

	.  reduce 98 (src line 533)


state 256
	types_one:  type ,.    (94)
	types_one:  type ,.types_one 

	IDENTIFIER  shift 120
	CHANNEL  shift 122
	UNSTABLE  shift 123
	[  shift 121
	.  reduce 94 (src line 516)

	types_one  goto 263
	type  goto 247

state 257
	type:  CHANNEL [ expr ] { types_one.} 

	}  shift 264
	.  error


state 258
	type:  UNSTABLE CHANNEL [ ] { types_one.} 

	}  shift 265
	.  error


state 259
	type:  UNSTABLE CHANNEL [ expr ] {.types_one } 

	IDENTIFIER  shift 120
	CHANNEL  shift 122
	UNSTABLE  shift 123
	[  shift 121
	.  error

	types_one  goto 266
	type  goto 247

state 260
	statement:  IF expr { statements_zero } ELSE { statements_zero.} ; 

	}  shift 267
	.  error


state 261
	statement:  FOR IDENTIFIER IN expr { statements_zero } ;.    (42)

	.  reduce 42 (src line 291)


state 262
	statement:  FOR IDENTIFIER IN RANGE expr TO expr {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 25
	NUMBER  shift 40
	SUB  shift 42
	NOT  shift 41
	CONST  shift 10
	VAR  shift 27
	IF  shift 28
	CHOICE  shift 29
	RECV  shift 30
	TIMEOUT_RECV  shift 44
	NONBLOCK_RECV  shift 46
	PEEK  shift 31
	TIMEOUT_PEEK  shift 45
	NONBLOCK_PEEK  shift 47
	SEND  shift 32
	FOR  shift 33
	BREAK  shift 34
	GOTO  shift 35
	SKIP  shift 36
	{  shift 26
	;  shift 38
	(  shift 43
	[  shift 48
	.  reduce 18 (src line 192)

	const_def  goto 39
	statements_zero  goto 268
	statement  goto 24
	expr  goto 37

state 263
	types_one:  type , types_one.    (95)

	.  reduce 95 (src line 520)


state 264
	type:  CHANNEL [ expr ] { types_one }.    (99)

	.  reduce 99 (src line 537)


state 265
	type:  UNSTABLE CHANNEL [ ] { types_one }.    (100)

	.  reduce 100 (src line 541)


state 266
	type:  UNSTABLE CHANNEL [ expr ] { types_one.} 

	}  shift 269
	.  error


state 267
	statement:  IF expr { statements_zero } ELSE { statements_zero }.; 

	;  shift 270
	.  error


state 268
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero.} ; 

	}  shift 271
	.  error


state 269
	type:  UNSTABLE CHANNEL [ expr ] { types_one }.    (101)

	.  reduce 101 (src line 545)


state 270
	statement:  IF expr { statements_zero } ELSE { statements_zero } ;.    (25)

	.  reduce 25 (src line 223)


state 271
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero }.; 

	;  shift 272
	.  error


state 272
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero } ;.    (43)

	.  reduce 43 (src line 295)


71 terminals, 22 nonterminals
105 grammar rules, 273/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
71 working sets used
memory: parser 156/30000
110 extra closures
1442 shift entries, 1 exceptions
111 goto entries
42 entries saved by goto default
Optimizer space used: output 950/30000
950 table entries, 195 zero
maximum spread: 71, maximum offset: 262
