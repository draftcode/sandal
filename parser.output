
state 0
	$accept: .spec $end 

	DATA  shift 8
	CONST  shift 10
	MODULE  shift 9
	PROC  shift 11
	INIT  shift 12
	.  error

	spec  goto 1
	toplevel_body  goto 2
	data_def  goto 3
	module_def  goto 4
	const_def  goto 5
	proc_def  goto 6
	init_block  goto 7

state 1
	$accept:  spec.$end 

	$end  accept
	.  error


state 2
	spec:  toplevel_body.    (1)
	spec:  toplevel_body.spec 

	DATA  shift 8
	CONST  shift 10
	MODULE  shift 9
	PROC  shift 11
	INIT  shift 12
	.  reduce 1 (src line 126)

	spec  goto 13
	toplevel_body  goto 2
	data_def  goto 3
	module_def  goto 4
	const_def  goto 5
	proc_def  goto 6
	init_block  goto 7

state 3
	toplevel_body:  data_def.    (3)

	.  reduce 3 (src line 141)


state 4
	toplevel_body:  module_def.    (4)

	.  reduce 4 (src line 143)


state 5
	toplevel_body:  const_def.    (5)

	.  reduce 5 (src line 144)


state 6
	toplevel_body:  proc_def.    (6)

	.  reduce 6 (src line 145)


state 7
	toplevel_body:  init_block.    (7)

	.  reduce 7 (src line 146)


state 8
	data_def:  DATA.IDENTIFIER { idents_one } ; 

	IDENTIFIER  shift 14
	.  error


state 9
	module_def:  MODULE.IDENTIFIER ( parameters_zero ) { module_body_zero } ; 

	IDENTIFIER  shift 15
	.  error


state 10
	const_def:  CONST.IDENTIFIER type ASSIGN expr ; 

	IDENTIFIER  shift 16
	.  error


state 11
	proc_def:  PROC.IDENTIFIER ( parameters_zero ) { statements_zero } ; 

	IDENTIFIER  shift 17
	.  error


state 12
	init_block:  INIT.{ statements_zero } ; 

	{  shift 18
	.  error


state 13
	spec:  toplevel_body spec.    (2)

	.  reduce 2 (src line 133)


state 14
	data_def:  DATA IDENTIFIER.{ idents_one } ; 

	{  shift 19
	.  error


state 15
	module_def:  MODULE IDENTIFIER.( parameters_zero ) { module_body_zero } ; 

	(  shift 20
	.  error


state 16
	const_def:  CONST IDENTIFIER.type ASSIGN expr ; 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	type  goto 21

state 17
	proc_def:  PROC IDENTIFIER.( parameters_zero ) { statements_zero } ; 

	(  shift 26
	.  error


state 18
	init_block:  INIT {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 29
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	CONST  shift 10
	VAR  shift 31
	IF  shift 32
	CHOICE  shift 33
	RECV  shift 34
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	PEEK  shift 35
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	SEND  shift 36
	FOR  shift 37
	BREAK  shift 38
	GOTO  shift 39
	SKIP  shift 40
	{  shift 30
	;  shift 42
	(  shift 47
	[  shift 52
	.  reduce 18 (src line 193)

	const_def  goto 43
	statements_zero  goto 27
	statement  goto 28
	expr  goto 41

state 19
	data_def:  DATA IDENTIFIER {.idents_one } ; 

	IDENTIFIER  shift 54
	.  error

	idents_one  goto 53

state 20
	module_def:  MODULE IDENTIFIER (.parameters_zero ) { module_body_zero } ; 
	parameters_zero: .    (82)

	IDENTIFIER  shift 58
	.  reduce 82 (src line 458)

	parameters_zero  goto 55
	parameters_one  goto 56
	parameter  goto 57

state 21
	const_def:  CONST IDENTIFIER type.ASSIGN expr ; 

	ASSIGN  shift 59
	.  error


state 22
	type:  IDENTIFIER.    (96)

	.  reduce 96 (src line 526)


state 23
	type:  [.] type 

	]  shift 60
	.  error


state 24
	type:  CHANNEL.{ types_one } 
	type:  CHANNEL.[ ] { types_one } 
	type:  CHANNEL.[ expr ] { types_one } 

	{  shift 61
	[  shift 62
	.  error


state 25
	type:  UNSTABLE.CHANNEL { types_one } 
	type:  UNSTABLE.CHANNEL [ ] { types_one } 
	type:  UNSTABLE.CHANNEL [ expr ] { types_one } 

	CHANNEL  shift 63
	.  error


state 26
	proc_def:  PROC IDENTIFIER (.parameters_zero ) { statements_zero } ; 
	parameters_zero: .    (82)

	IDENTIFIER  shift 58
	.  reduce 82 (src line 458)

	parameters_zero  goto 64
	parameters_one  goto 56
	parameter  goto 57

state 27
	init_block:  INIT { statements_zero.} ; 

	}  shift 65
	.  error


state 28
	statements_zero:  statement.statements_zero 
	statements_zero: .    (18)

	IDENTIFIER  shift 29
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	CONST  shift 10
	VAR  shift 31
	IF  shift 32
	CHOICE  shift 33
	RECV  shift 34
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	PEEK  shift 35
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	SEND  shift 36
	FOR  shift 37
	BREAK  shift 38
	GOTO  shift 39
	SKIP  shift 40
	{  shift 30
	;  shift 42
	(  shift 47
	[  shift 52
	.  reduce 18 (src line 193)

	const_def  goto 43
	statements_zero  goto 66
	statement  goto 28
	expr  goto 41

state 29
	statement:  IDENTIFIER.: statement 
	statement:  IDENTIFIER.ASSIGN expr ; 
	statement:  IDENTIFIER.ADD_ASSIGN expr ; 
	statement:  IDENTIFIER.SUB_ASSIGN expr ; 
	statement:  IDENTIFIER.MUL_ASSIGN expr ; 
	statement:  IDENTIFIER.QUO_ASSIGN expr ; 
	statement:  IDENTIFIER.REM_ASSIGN expr ; 
	statement:  IDENTIFIER.AND_ASSIGN expr ; 
	statement:  IDENTIFIER.OR_ASSIGN expr ; 
	statement:  IDENTIFIER.XOR_ASSIGN expr ; 
	statement:  IDENTIFIER.SHL_ASSIGN expr ; 
	statement:  IDENTIFIER.SHR_ASSIGN expr ; 
	statement:  IDENTIFIER.( arguments_one ) ; 
	expr:  IDENTIFIER.    (51)

	ADD_ASSIGN  shift 69
	SUB_ASSIGN  shift 70
	MUL_ASSIGN  shift 71
	QUO_ASSIGN  shift 72
	REM_ASSIGN  shift 73
	AND_ASSIGN  shift 74
	OR_ASSIGN  shift 75
	XOR_ASSIGN  shift 76
	SHL_ASSIGN  shift 77
	SHR_ASSIGN  shift 78
	ASSIGN  shift 68
	(  shift 79
	:  shift 67
	.  reduce 51 (src line 329)


state 30
	statement:  {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 29
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	CONST  shift 10
	VAR  shift 31
	IF  shift 32
	CHOICE  shift 33
	RECV  shift 34
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	PEEK  shift 35
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	SEND  shift 36
	FOR  shift 37
	BREAK  shift 38
	GOTO  shift 39
	SKIP  shift 40
	{  shift 30
	;  shift 42
	(  shift 47
	[  shift 52
	.  reduce 18 (src line 193)

	const_def  goto 43
	statements_zero  goto 80
	statement  goto 28
	expr  goto 41

state 31
	statement:  VAR.IDENTIFIER type ; 
	statement:  VAR.IDENTIFIER type ASSIGN expr ; 

	IDENTIFIER  shift 81
	.  error


state 32
	statement:  IF.expr { statements_zero } ; 
	statement:  IF.expr { statements_zero } ELSE { statements_zero } ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 82

state 33
	statement:  CHOICE.blocks_one ; 

	{  shift 85
	.  error

	blocks_one  goto 84

state 34
	statement:  RECV.( arguments_one ) ; 

	(  shift 86
	.  error


state 35
	statement:  PEEK.( arguments_one ) ; 

	(  shift 87
	.  error


state 36
	statement:  SEND.( arguments_one ) ; 

	(  shift 88
	.  error


state 37
	statement:  FOR.{ statements_zero } ; 
	statement:  FOR.IDENTIFIER IN expr { statements_zero } ; 
	statement:  FOR.IDENTIFIER IN RANGE expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 90
	{  shift 89
	.  error


state 38
	statement:  BREAK.; 

	;  shift 91
	.  error


state 39
	statement:  GOTO.IDENTIFIER ; 

	IDENTIFIER  shift 92
	.  error


state 40
	statement:  SKIP.; 

	;  shift 93
	.  error


state 41
	statement:  expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 94
	.  error


state 42
	statement:  ;.    (49)

	.  reduce 49 (src line 320)


state 43
	statement:  const_def.    (50)

	.  reduce 50 (src line 324)


state 44
	expr:  NUMBER.    (52)

	.  reduce 52 (src line 333)


state 45
	expr:  NOT.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 113

state 46
	expr:  SUB.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 114

state 47
	expr:  (.expr ) 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 115

state 48
	expr:  TIMEOUT_RECV.( arguments_one ) 

	(  shift 116
	.  error


state 49
	expr:  TIMEOUT_PEEK.( arguments_one ) 

	(  shift 117
	.  error


state 50
	expr:  NONBLOCK_RECV.( arguments_one ) 

	(  shift 118
	.  error


state 51
	expr:  NONBLOCK_PEEK.( arguments_one ) 

	(  shift 119
	.  error


state 52
	expr:  [.arguments_zero ] 
	arguments_zero: .    (88)

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  reduce 88 (src line 488)

	expr  goto 122
	arguments_zero  goto 120
	arguments_one  goto 121

state 53
	data_def:  DATA IDENTIFIER { idents_one.} ; 

	}  shift 123
	.  error


state 54
	idents_one:  IDENTIFIER.    (79)
	idents_one:  IDENTIFIER., 
	idents_one:  IDENTIFIER., idents_one 

	,  shift 124
	.  reduce 79 (src line 444)


state 55
	module_def:  MODULE IDENTIFIER ( parameters_zero.) { module_body_zero } ; 

	)  shift 125
	.  error


state 56
	parameters_zero:  parameters_one.    (83)

	.  reduce 83 (src line 463)


state 57
	parameters_one:  parameter.    (84)
	parameters_one:  parameter., 
	parameters_one:  parameter., parameters_one 

	,  shift 126
	.  reduce 84 (src line 468)


state 58
	parameter:  IDENTIFIER.type 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	type  goto 127

state 59
	const_def:  CONST IDENTIFIER type ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 128

state 60
	type:  [ ].type 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	type  goto 129

state 61
	type:  CHANNEL {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 130
	type  goto 131

state 62
	type:  CHANNEL [.] { types_one } 
	type:  CHANNEL [.expr ] { types_one } 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	]  shift 132
	.  error

	expr  goto 133

state 63
	type:  UNSTABLE CHANNEL.{ types_one } 
	type:  UNSTABLE CHANNEL.[ ] { types_one } 
	type:  UNSTABLE CHANNEL.[ expr ] { types_one } 

	{  shift 134
	[  shift 135
	.  error


state 64
	proc_def:  PROC IDENTIFIER ( parameters_zero.) { statements_zero } ; 

	)  shift 136
	.  error


state 65
	init_block:  INIT { statements_zero }.; 

	;  shift 137
	.  error


state 66
	statements_zero:  statement statements_zero.    (19)

	.  reduce 19 (src line 198)


state 67
	statement:  IDENTIFIER :.statement 

	IDENTIFIER  shift 29
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	CONST  shift 10
	VAR  shift 31
	IF  shift 32
	CHOICE  shift 33
	RECV  shift 34
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	PEEK  shift 35
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	SEND  shift 36
	FOR  shift 37
	BREAK  shift 38
	GOTO  shift 39
	SKIP  shift 40
	{  shift 30
	;  shift 42
	(  shift 47
	[  shift 52
	.  error

	const_def  goto 43
	statement  goto 138
	expr  goto 41

state 68
	statement:  IDENTIFIER ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 139

state 69
	statement:  IDENTIFIER ADD_ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 140

state 70
	statement:  IDENTIFIER SUB_ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 141

state 71
	statement:  IDENTIFIER MUL_ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 142

state 72
	statement:  IDENTIFIER QUO_ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 143

state 73
	statement:  IDENTIFIER REM_ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 144

state 74
	statement:  IDENTIFIER AND_ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 145

state 75
	statement:  IDENTIFIER OR_ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 146

state 76
	statement:  IDENTIFIER XOR_ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 147

state 77
	statement:  IDENTIFIER SHL_ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 148

state 78
	statement:  IDENTIFIER SHR_ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 149

state 79
	statement:  IDENTIFIER (.arguments_one ) ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 122
	arguments_one  goto 150

state 80
	statement:  { statements_zero.} ; 

	}  shift 151
	.  error


state 81
	statement:  VAR IDENTIFIER.type ; 
	statement:  VAR IDENTIFIER.type ASSIGN expr ; 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	type  goto 152

state 82
	statement:  IF expr.{ statements_zero } ; 
	statement:  IF expr.{ statements_zero } ELSE { statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	{  shift 153
	.  error


state 83
	expr:  IDENTIFIER.    (51)

	.  reduce 51 (src line 329)


state 84
	statement:  CHOICE blocks_one.; 

	;  shift 154
	.  error


state 85
	blocks_one:  {.statements_zero } 
	blocks_one:  {.statements_zero } , 
	blocks_one:  {.statements_zero } , blocks_one 
	statements_zero: .    (18)

	IDENTIFIER  shift 29
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	CONST  shift 10
	VAR  shift 31
	IF  shift 32
	CHOICE  shift 33
	RECV  shift 34
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	PEEK  shift 35
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	SEND  shift 36
	FOR  shift 37
	BREAK  shift 38
	GOTO  shift 39
	SKIP  shift 40
	{  shift 30
	;  shift 42
	(  shift 47
	[  shift 52
	.  reduce 18 (src line 193)

	const_def  goto 43
	statements_zero  goto 155
	statement  goto 28
	expr  goto 41

state 86
	statement:  RECV (.arguments_one ) ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 122
	arguments_one  goto 156

state 87
	statement:  PEEK (.arguments_one ) ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 122
	arguments_one  goto 157

state 88
	statement:  SEND (.arguments_one ) ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 122
	arguments_one  goto 158

state 89
	statement:  FOR {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 29
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	CONST  shift 10
	VAR  shift 31
	IF  shift 32
	CHOICE  shift 33
	RECV  shift 34
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	PEEK  shift 35
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	SEND  shift 36
	FOR  shift 37
	BREAK  shift 38
	GOTO  shift 39
	SKIP  shift 40
	{  shift 30
	;  shift 42
	(  shift 47
	[  shift 52
	.  reduce 18 (src line 193)

	const_def  goto 43
	statements_zero  goto 159
	statement  goto 28
	expr  goto 41

state 90
	statement:  FOR IDENTIFIER.IN expr { statements_zero } ; 
	statement:  FOR IDENTIFIER.IN RANGE expr TO expr { statements_zero } ; 

	IN  shift 160
	.  error


state 91
	statement:  BREAK ;.    (44)

	.  reduce 44 (src line 300)


state 92
	statement:  GOTO IDENTIFIER.; 

	;  shift 161
	.  error


state 93
	statement:  SKIP ;.    (47)

	.  reduce 47 (src line 312)


state 94
	statement:  expr ;.    (48)

	.  reduce 48 (src line 316)


state 95
	expr:  expr ADD.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 162

state 96
	expr:  expr SUB.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 163

state 97
	expr:  expr MUL.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 164

state 98
	expr:  expr QUO.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 165

state 99
	expr:  expr REM.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 166

state 100
	expr:  expr AND.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 167

state 101
	expr:  expr OR.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 168

state 102
	expr:  expr XOR.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 169

state 103
	expr:  expr SHL.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 170

state 104
	expr:  expr SHR.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 171

state 105
	expr:  expr LAND.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 172

state 106
	expr:  expr LOR.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 173

state 107
	expr:  expr EQL.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 174

state 108
	expr:  expr LSS.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 175

state 109
	expr:  expr GTR.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 176

state 110
	expr:  expr NEQ.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 177

state 111
	expr:  expr LEQ.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 178

state 112
	expr:  expr GEQ.expr 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 179

state 113
	expr:  NOT expr.    (53)
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 53 (src line 337)


state 114
	expr:  SUB expr.    (54)
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 54 (src line 341)


state 115
	expr:  ( expr.) 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	)  shift 180
	.  error


state 116
	expr:  TIMEOUT_RECV (.arguments_one ) 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 122
	arguments_one  goto 181

state 117
	expr:  TIMEOUT_PEEK (.arguments_one ) 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 122
	arguments_one  goto 182

state 118
	expr:  NONBLOCK_RECV (.arguments_one ) 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 122
	arguments_one  goto 183

state 119
	expr:  NONBLOCK_PEEK (.arguments_one ) 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 122
	arguments_one  goto 184

state 120
	expr:  [ arguments_zero.] 

	]  shift 185
	.  error


state 121
	arguments_zero:  arguments_one.    (89)

	.  reduce 89 (src line 493)


state 122
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	arguments_one:  expr.    (90)
	arguments_one:  expr., 
	arguments_one:  expr., arguments_one 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	,  shift 186
	.  reduce 90 (src line 498)


state 123
	data_def:  DATA IDENTIFIER { idents_one }.; 

	;  shift 187
	.  error


state 124
	idents_one:  IDENTIFIER ,.    (80)
	idents_one:  IDENTIFIER ,.idents_one 

	IDENTIFIER  shift 54
	.  reduce 80 (src line 449)

	idents_one  goto 188

state 125
	module_def:  MODULE IDENTIFIER ( parameters_zero ).{ module_body_zero } ; 

	{  shift 189
	.  error


state 126
	parameters_one:  parameter ,.    (85)
	parameters_one:  parameter ,.parameters_one 

	IDENTIFIER  shift 58
	.  reduce 85 (src line 473)

	parameters_one  goto 190
	parameter  goto 57

state 127
	parameter:  IDENTIFIER type.    (87)

	.  reduce 87 (src line 482)


state 128
	const_def:  CONST IDENTIFIER type ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 191
	.  error


state 129
	type:  [ ] type.    (97)

	.  reduce 97 (src line 530)


state 130
	type:  CHANNEL { types_one.} 

	}  shift 192
	.  error


state 131
	types_one:  type.    (93)
	types_one:  type., 
	types_one:  type., types_one 

	,  shift 193
	.  reduce 93 (src line 512)


state 132
	type:  CHANNEL [ ].{ types_one } 

	{  shift 194
	.  error


state 133
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	type:  CHANNEL [ expr.] { types_one } 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	]  shift 195
	.  error


state 134
	type:  UNSTABLE CHANNEL {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 196
	type  goto 131

state 135
	type:  UNSTABLE CHANNEL [.] { types_one } 
	type:  UNSTABLE CHANNEL [.expr ] { types_one } 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	]  shift 197
	.  error

	expr  goto 198

state 136
	proc_def:  PROC IDENTIFIER ( parameters_zero ).{ statements_zero } ; 

	{  shift 199
	.  error


state 137
	init_block:  INIT { statements_zero } ;.    (17)

	.  reduce 17 (src line 187)


state 138
	statement:  IDENTIFIER : statement.    (20)

	.  reduce 20 (src line 203)


state 139
	statement:  IDENTIFIER ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 200
	.  error


state 140
	statement:  IDENTIFIER ADD_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 201
	.  error


state 141
	statement:  IDENTIFIER SUB_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 202
	.  error


state 142
	statement:  IDENTIFIER MUL_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 203
	.  error


state 143
	statement:  IDENTIFIER QUO_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 204
	.  error


state 144
	statement:  IDENTIFIER REM_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 205
	.  error


state 145
	statement:  IDENTIFIER AND_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 206
	.  error


state 146
	statement:  IDENTIFIER OR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 207
	.  error


state 147
	statement:  IDENTIFIER XOR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 208
	.  error


state 148
	statement:  IDENTIFIER SHL_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 209
	.  error


state 149
	statement:  IDENTIFIER SHR_ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 210
	.  error


state 150
	statement:  IDENTIFIER ( arguments_one.) ; 

	)  shift 211
	.  error


state 151
	statement:  { statements_zero }.; 

	;  shift 212
	.  error


state 152
	statement:  VAR IDENTIFIER type.; 
	statement:  VAR IDENTIFIER type.ASSIGN expr ; 

	ASSIGN  shift 214
	;  shift 213
	.  error


state 153
	statement:  IF expr {.statements_zero } ; 
	statement:  IF expr {.statements_zero } ELSE { statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 29
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	CONST  shift 10
	VAR  shift 31
	IF  shift 32
	CHOICE  shift 33
	RECV  shift 34
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	PEEK  shift 35
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	SEND  shift 36
	FOR  shift 37
	BREAK  shift 38
	GOTO  shift 39
	SKIP  shift 40
	{  shift 30
	;  shift 42
	(  shift 47
	[  shift 52
	.  reduce 18 (src line 193)

	const_def  goto 43
	statements_zero  goto 215
	statement  goto 28
	expr  goto 41

state 154
	statement:  CHOICE blocks_one ;.    (37)

	.  reduce 37 (src line 272)


state 155
	blocks_one:  { statements_zero.} 
	blocks_one:  { statements_zero.} , 
	blocks_one:  { statements_zero.} , blocks_one 

	}  shift 216
	.  error


state 156
	statement:  RECV ( arguments_one.) ; 

	)  shift 217
	.  error


state 157
	statement:  PEEK ( arguments_one.) ; 

	)  shift 218
	.  error


state 158
	statement:  SEND ( arguments_one.) ; 

	)  shift 219
	.  error


state 159
	statement:  FOR { statements_zero.} ; 

	}  shift 220
	.  error


state 160
	statement:  FOR IDENTIFIER IN.expr { statements_zero } ; 
	statement:  FOR IDENTIFIER IN.RANGE expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	RANGE  shift 222
	(  shift 47
	[  shift 52
	.  error

	expr  goto 221

state 161
	statement:  GOTO IDENTIFIER ;.    (45)

	.  reduce 45 (src line 304)


state 162
	expr:  expr.ADD expr 
	expr:  expr ADD expr.    (56)
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	SHL  shift 103
	SHR  shift 104
	.  reduce 56 (src line 349)


state 163
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (57)
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	SHL  shift 103
	SHR  shift 104
	.  reduce 57 (src line 353)


state 164
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (58)
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 58 (src line 357)


state 165
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr QUO expr.    (59)
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 59 (src line 361)


state 166
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr REM expr.    (60)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 60 (src line 365)


state 167
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (61)
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 61 (src line 369)


state 168
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (62)
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	SHL  shift 103
	SHR  shift 104
	.  reduce 62 (src line 373)


state 169
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr XOR expr.    (63)
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	SHL  shift 103
	SHR  shift 104
	.  reduce 63 (src line 377)


state 170
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr SHL expr.    (64)
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 64 (src line 381)


state 171
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr SHR expr.    (65)
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	.  reduce 65 (src line 385)


state 172
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr LAND expr.    (66)
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	.  reduce 66 (src line 389)


state 173
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr LOR expr.    (67)
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	.  reduce 67 (src line 393)


state 174
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr EQL expr.    (68)
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	.  reduce 68 (src line 397)


state 175
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr LSS expr.    (69)
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	.  reduce 69 (src line 401)


state 176
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr GTR expr.    (70)
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	.  reduce 70 (src line 405)


state 177
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr NEQ expr.    (71)
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	.  reduce 71 (src line 409)


state 178
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr LEQ expr.    (72)
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	.  reduce 72 (src line 413)


state 179
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	expr:  expr GEQ expr.    (73)

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	.  reduce 73 (src line 417)


state 180
	expr:  ( expr ).    (55)

	.  reduce 55 (src line 345)


state 181
	expr:  TIMEOUT_RECV ( arguments_one.) 

	)  shift 223
	.  error


state 182
	expr:  TIMEOUT_PEEK ( arguments_one.) 

	)  shift 224
	.  error


state 183
	expr:  NONBLOCK_RECV ( arguments_one.) 

	)  shift 225
	.  error


state 184
	expr:  NONBLOCK_PEEK ( arguments_one.) 

	)  shift 226
	.  error


state 185
	expr:  [ arguments_zero ].    (78)

	.  reduce 78 (src line 437)


state 186
	arguments_one:  expr ,.    (91)
	arguments_one:  expr ,.arguments_one 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  reduce 91 (src line 503)

	expr  goto 122
	arguments_one  goto 227

state 187
	data_def:  DATA IDENTIFIER { idents_one } ;.    (8)

	.  reduce 8 (src line 148)


state 188
	idents_one:  IDENTIFIER , idents_one.    (81)

	.  reduce 81 (src line 453)


state 189
	module_def:  MODULE IDENTIFIER ( parameters_zero ) {.module_body_zero } ; 
	module_body_zero: .    (10)

	CONST  shift 10
	PROC  shift 11
	INIT  shift 12
	.  reduce 10 (src line 160)

	const_def  goto 230
	proc_def  goto 231
	init_block  goto 232
	module_body_zero  goto 228
	module_body  goto 229

state 190
	parameters_one:  parameter , parameters_one.    (86)

	.  reduce 86 (src line 477)


state 191
	const_def:  CONST IDENTIFIER type ASSIGN expr ;.    (15)

	.  reduce 15 (src line 175)


state 192
	type:  CHANNEL { types_one }.    (98)

	.  reduce 98 (src line 534)


state 193
	types_one:  type ,.    (94)
	types_one:  type ,.types_one 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  reduce 94 (src line 517)

	types_one  goto 233
	type  goto 131

state 194
	type:  CHANNEL [ ] {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 234
	type  goto 131

state 195
	type:  CHANNEL [ expr ].{ types_one } 

	{  shift 235
	.  error


state 196
	type:  UNSTABLE CHANNEL { types_one.} 

	}  shift 236
	.  error


state 197
	type:  UNSTABLE CHANNEL [ ].{ types_one } 

	{  shift 237
	.  error


state 198
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 
	type:  UNSTABLE CHANNEL [ expr.] { types_one } 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	]  shift 238
	.  error


state 199
	proc_def:  PROC IDENTIFIER ( parameters_zero ) {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 29
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	CONST  shift 10
	VAR  shift 31
	IF  shift 32
	CHOICE  shift 33
	RECV  shift 34
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	PEEK  shift 35
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	SEND  shift 36
	FOR  shift 37
	BREAK  shift 38
	GOTO  shift 39
	SKIP  shift 40
	{  shift 30
	;  shift 42
	(  shift 47
	[  shift 52
	.  reduce 18 (src line 193)

	const_def  goto 43
	statements_zero  goto 239
	statement  goto 28
	expr  goto 41

state 200
	statement:  IDENTIFIER ASSIGN expr ;.    (26)

	.  reduce 26 (src line 228)


state 201
	statement:  IDENTIFIER ADD_ASSIGN expr ;.    (27)

	.  reduce 27 (src line 232)


state 202
	statement:  IDENTIFIER SUB_ASSIGN expr ;.    (28)

	.  reduce 28 (src line 236)


state 203
	statement:  IDENTIFIER MUL_ASSIGN expr ;.    (29)

	.  reduce 29 (src line 240)


state 204
	statement:  IDENTIFIER QUO_ASSIGN expr ;.    (30)

	.  reduce 30 (src line 244)


state 205
	statement:  IDENTIFIER REM_ASSIGN expr ;.    (31)

	.  reduce 31 (src line 248)


state 206
	statement:  IDENTIFIER AND_ASSIGN expr ;.    (32)

	.  reduce 32 (src line 252)


state 207
	statement:  IDENTIFIER OR_ASSIGN expr ;.    (33)

	.  reduce 33 (src line 256)


state 208
	statement:  IDENTIFIER XOR_ASSIGN expr ;.    (34)

	.  reduce 34 (src line 260)


state 209
	statement:  IDENTIFIER SHL_ASSIGN expr ;.    (35)

	.  reduce 35 (src line 264)


state 210
	statement:  IDENTIFIER SHR_ASSIGN expr ;.    (36)

	.  reduce 36 (src line 268)


state 211
	statement:  IDENTIFIER ( arguments_one ).; 

	;  shift 240
	.  error


state 212
	statement:  { statements_zero } ;.    (21)

	.  reduce 21 (src line 208)


state 213
	statement:  VAR IDENTIFIER type ;.    (22)

	.  reduce 22 (src line 212)


state 214
	statement:  VAR IDENTIFIER type ASSIGN.expr ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 241

state 215
	statement:  IF expr { statements_zero.} ; 
	statement:  IF expr { statements_zero.} ELSE { statements_zero } ; 

	}  shift 242
	.  error


state 216
	blocks_one:  { statements_zero }.    (104)
	blocks_one:  { statements_zero }., 
	blocks_one:  { statements_zero }., blocks_one 

	,  shift 243
	.  reduce 104 (src line 559)


state 217
	statement:  RECV ( arguments_one ).; 

	;  shift 244
	.  error


state 218
	statement:  PEEK ( arguments_one ).; 

	;  shift 245
	.  error


state 219
	statement:  SEND ( arguments_one ).; 

	;  shift 246
	.  error


state 220
	statement:  FOR { statements_zero }.; 

	;  shift 247
	.  error


state 221
	statement:  FOR IDENTIFIER IN expr.{ statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	{  shift 248
	.  error


state 222
	statement:  FOR IDENTIFIER IN RANGE.expr TO expr { statements_zero } ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 249

state 223
	expr:  TIMEOUT_RECV ( arguments_one ).    (74)

	.  reduce 74 (src line 421)


state 224
	expr:  TIMEOUT_PEEK ( arguments_one ).    (75)

	.  reduce 75 (src line 425)


state 225
	expr:  NONBLOCK_RECV ( arguments_one ).    (76)

	.  reduce 76 (src line 429)


state 226
	expr:  NONBLOCK_PEEK ( arguments_one ).    (77)

	.  reduce 77 (src line 433)


state 227
	arguments_one:  expr , arguments_one.    (92)

	.  reduce 92 (src line 507)


state 228
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero.} ; 

	}  shift 250
	.  error


state 229
	module_body_zero:  module_body.module_body_zero 
	module_body_zero: .    (10)

	CONST  shift 10
	PROC  shift 11
	INIT  shift 12
	.  reduce 10 (src line 160)

	const_def  goto 230
	proc_def  goto 231
	init_block  goto 232
	module_body_zero  goto 251
	module_body  goto 229

state 230
	module_body:  const_def.    (12)

	.  reduce 12 (src line 170)


state 231
	module_body:  proc_def.    (13)

	.  reduce 13 (src line 172)


state 232
	module_body:  init_block.    (14)

	.  reduce 14 (src line 173)


state 233
	types_one:  type , types_one.    (95)

	.  reduce 95 (src line 521)


state 234
	type:  CHANNEL [ ] { types_one.} 

	}  shift 252
	.  error


state 235
	type:  CHANNEL [ expr ] {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 253
	type  goto 131

state 236
	type:  UNSTABLE CHANNEL { types_one }.    (99)

	.  reduce 99 (src line 538)


state 237
	type:  UNSTABLE CHANNEL [ ] {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 254
	type  goto 131

state 238
	type:  UNSTABLE CHANNEL [ expr ].{ types_one } 

	{  shift 255
	.  error


state 239
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero.} ; 

	}  shift 256
	.  error


state 240
	statement:  IDENTIFIER ( arguments_one ) ;.    (46)

	.  reduce 46 (src line 308)


state 241
	statement:  VAR IDENTIFIER type ASSIGN expr.; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	;  shift 257
	.  error


state 242
	statement:  IF expr { statements_zero }.; 
	statement:  IF expr { statements_zero }.ELSE { statements_zero } ; 

	ELSE  shift 259
	;  shift 258
	.  error


state 243
	blocks_one:  { statements_zero } ,.    (105)
	blocks_one:  { statements_zero } ,.blocks_one 

	{  shift 85
	.  reduce 105 (src line 564)

	blocks_one  goto 260

state 244
	statement:  RECV ( arguments_one ) ;.    (38)

	.  reduce 38 (src line 276)


state 245
	statement:  PEEK ( arguments_one ) ;.    (39)

	.  reduce 39 (src line 280)


state 246
	statement:  SEND ( arguments_one ) ;.    (40)

	.  reduce 40 (src line 284)


state 247
	statement:  FOR { statements_zero } ;.    (41)

	.  reduce 41 (src line 288)


state 248
	statement:  FOR IDENTIFIER IN expr {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 29
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	CONST  shift 10
	VAR  shift 31
	IF  shift 32
	CHOICE  shift 33
	RECV  shift 34
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	PEEK  shift 35
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	SEND  shift 36
	FOR  shift 37
	BREAK  shift 38
	GOTO  shift 39
	SKIP  shift 40
	{  shift 30
	;  shift 42
	(  shift 47
	[  shift 52
	.  reduce 18 (src line 193)

	const_def  goto 43
	statements_zero  goto 261
	statement  goto 28
	expr  goto 41

state 249
	statement:  FOR IDENTIFIER IN RANGE expr.TO expr { statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	TO  shift 262
	.  error


state 250
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero }.; 

	;  shift 263
	.  error


state 251
	module_body_zero:  module_body module_body_zero.    (11)

	.  reduce 11 (src line 165)


state 252
	type:  CHANNEL [ ] { types_one }.    (100)

	.  reduce 100 (src line 542)


state 253
	type:  CHANNEL [ expr ] { types_one.} 

	}  shift 264
	.  error


state 254
	type:  UNSTABLE CHANNEL [ ] { types_one.} 

	}  shift 265
	.  error


state 255
	type:  UNSTABLE CHANNEL [ expr ] {.types_one } 

	IDENTIFIER  shift 22
	CHANNEL  shift 24
	UNSTABLE  shift 25
	[  shift 23
	.  error

	types_one  goto 266
	type  goto 131

state 256
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero }.; 

	;  shift 267
	.  error


state 257
	statement:  VAR IDENTIFIER type ASSIGN expr ;.    (23)

	.  reduce 23 (src line 216)


state 258
	statement:  IF expr { statements_zero } ;.    (24)

	.  reduce 24 (src line 220)


state 259
	statement:  IF expr { statements_zero } ELSE.{ statements_zero } ; 

	{  shift 268
	.  error


state 260
	blocks_one:  { statements_zero } , blocks_one.    (106)

	.  reduce 106 (src line 568)


state 261
	statement:  FOR IDENTIFIER IN expr { statements_zero.} ; 

	}  shift 269
	.  error


state 262
	statement:  FOR IDENTIFIER IN RANGE expr TO.expr { statements_zero } ; 

	IDENTIFIER  shift 83
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	(  shift 47
	[  shift 52
	.  error

	expr  goto 270

state 263
	module_def:  MODULE IDENTIFIER ( parameters_zero ) { module_body_zero } ;.    (9)

	.  reduce 9 (src line 154)


state 264
	type:  CHANNEL [ expr ] { types_one }.    (101)

	.  reduce 101 (src line 546)


state 265
	type:  UNSTABLE CHANNEL [ ] { types_one }.    (102)

	.  reduce 102 (src line 550)


state 266
	type:  UNSTABLE CHANNEL [ expr ] { types_one.} 

	}  shift 271
	.  error


state 267
	proc_def:  PROC IDENTIFIER ( parameters_zero ) { statements_zero } ;.    (16)

	.  reduce 16 (src line 181)


state 268
	statement:  IF expr { statements_zero } ELSE {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 29
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	CONST  shift 10
	VAR  shift 31
	IF  shift 32
	CHOICE  shift 33
	RECV  shift 34
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	PEEK  shift 35
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	SEND  shift 36
	FOR  shift 37
	BREAK  shift 38
	GOTO  shift 39
	SKIP  shift 40
	{  shift 30
	;  shift 42
	(  shift 47
	[  shift 52
	.  reduce 18 (src line 193)

	const_def  goto 43
	statements_zero  goto 272
	statement  goto 28
	expr  goto 41

state 269
	statement:  FOR IDENTIFIER IN expr { statements_zero }.; 

	;  shift 273
	.  error


state 270
	statement:  FOR IDENTIFIER IN RANGE expr TO expr.{ statements_zero } ; 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MUL expr 
	expr:  expr.QUO expr 
	expr:  expr.REM expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.XOR expr 
	expr:  expr.SHL expr 
	expr:  expr.SHR expr 
	expr:  expr.LAND expr 
	expr:  expr.LOR expr 
	expr:  expr.EQL expr 
	expr:  expr.LSS expr 
	expr:  expr.GTR expr 
	expr:  expr.NEQ expr 
	expr:  expr.LEQ expr 
	expr:  expr.GEQ expr 

	ADD  shift 95
	SUB  shift 96
	MUL  shift 97
	QUO  shift 98
	REM  shift 99
	AND  shift 100
	OR  shift 101
	XOR  shift 102
	SHL  shift 103
	SHR  shift 104
	LAND  shift 105
	LOR  shift 106
	EQL  shift 107
	LSS  shift 108
	GTR  shift 109
	NEQ  shift 110
	LEQ  shift 111
	GEQ  shift 112
	{  shift 274
	.  error


state 271
	type:  UNSTABLE CHANNEL [ expr ] { types_one }.    (103)

	.  reduce 103 (src line 554)


state 272
	statement:  IF expr { statements_zero } ELSE { statements_zero.} ; 

	}  shift 275
	.  error


state 273
	statement:  FOR IDENTIFIER IN expr { statements_zero } ;.    (42)

	.  reduce 42 (src line 292)


state 274
	statement:  FOR IDENTIFIER IN RANGE expr TO expr {.statements_zero } ; 
	statements_zero: .    (18)

	IDENTIFIER  shift 29
	NUMBER  shift 44
	SUB  shift 46
	NOT  shift 45
	CONST  shift 10
	VAR  shift 31
	IF  shift 32
	CHOICE  shift 33
	RECV  shift 34
	TIMEOUT_RECV  shift 48
	NONBLOCK_RECV  shift 50
	PEEK  shift 35
	TIMEOUT_PEEK  shift 49
	NONBLOCK_PEEK  shift 51
	SEND  shift 36
	FOR  shift 37
	BREAK  shift 38
	GOTO  shift 39
	SKIP  shift 40
	{  shift 30
	;  shift 42
	(  shift 47
	[  shift 52
	.  reduce 18 (src line 193)

	const_def  goto 43
	statements_zero  goto 276
	statement  goto 28
	expr  goto 41

state 275
	statement:  IF expr { statements_zero } ELSE { statements_zero }.; 

	;  shift 277
	.  error


state 276
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero.} ; 

	}  shift 278
	.  error


state 277
	statement:  IF expr { statements_zero } ELSE { statements_zero } ;.    (25)

	.  reduce 25 (src line 224)


state 278
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero }.; 

	;  shift 279
	.  error


state 279
	statement:  FOR IDENTIFIER IN RANGE expr TO expr { statements_zero } ;.    (43)

	.  reduce 43 (src line 296)


71 terminals, 22 nonterminals
107 grammar rules, 280/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
71 working sets used
memory: parser 158/30000
117 extra closures
1458 shift entries, 1 exceptions
114 goto entries
44 entries saved by goto default
Optimizer space used: output 912/30000
912 table entries, 150 zero
maximum spread: 71, maximum offset: 274
